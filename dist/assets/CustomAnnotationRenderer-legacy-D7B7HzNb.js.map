{"version":3,"file":"CustomAnnotationRenderer-legacy-D7B7HzNb.js","sources":["../../src/core/CustomAnnotationRenderer.js"],"sourcesContent":["/**\n * 自定义标注渲染器\n * \n * 功能：\n * - 渲染自定义点标注和区域标注\n * - 提供视觉反馈和交互\n * - 支持编号系统和颜色自定义\n * - 与AnnotationTool集成\n */\n\nexport class CustomAnnotationRenderer {\n  constructor(annotationTool, customAnnotationManager) {\n    this.annotationTool = annotationTool;\n    this.customAnnotationManager = customAnnotationManager;\n    this.ctx = annotationTool.ctx;\n    this.canvas = annotationTool.canvas;\n    \n    // 渲染配置\n    this.config = {\n      // 基础配置\n      basePointRadius: 8,\n      minPointRadius: 4,\n      maxPointRadius: 20,\n      pointScaleFactor: 0.8,\n      \n      // 颜色配置\n      pointBorderColor: '#ffffff',\n      pointBorderWidth: 2,\n      regionBorderWidth: 2,\n      regionFillAlpha: 0.2,\n      \n      // 标签配置\n      baseLabelFontSize: 12,\n      labelOffset: 16,\n      labelThresholdScale: 0.6,\n      tinyThresholdScale: 0.3,\n      \n      // 状态配置\n      hoverAlpha: 0.8,\n      selectedAlpha: 0.9\n    };\n    \n    // 当前状态\n    this.hoveredAnnotation = null;\n    this.selectedAnnotation = null;\n    \n    // 拖拽状态\n    this.draggedAnnotation = null;\n    this.dragStartPosition = null;\n    this.dragCurrentPosition = null;\n    this.isDragging = false;\n    this.dragMode = 'move'; // 'move' | 'resize'\n    this.dragHandle = null; // 'n','s','e','w','ne','nw','se','sw'\n    \n    console.log('CustomAnnotationRenderer initialized');\n  }\n\n  /**\n   * 获取自定义标注显示策略\n   */\n  getCustomAnnotationDisplayStrategy() {\n    const scale = this.annotationTool.state.scale;\n    \n    // 计算实际的标注点半径\n    const smallRadius = 3; // 更小的默认点半径\n    let actualRadius;\n    \n    if (scale >= 1.5) {\n      // 大缩放：使用能容纳文字的最小圆圈\n      const fontSize = Math.max(10, Math.min(16, 12 * scale));\n      const textBasedRadius = Math.max(8, fontSize * 0.7);\n      const maxRadiusForLargeScale = Math.min(12, 8 + (scale - 1.5) * 2);\n      \n      actualRadius = Math.min(textBasedRadius, maxRadiusForLargeScale);\n      actualRadius = Math.max(8, actualRadius);\n    } else {\n      // 默认和小缩放：使用更小的点\n      actualRadius = smallRadius + (scale - 0.1) * 1.5;\n      actualRadius = Math.max(smallRadius, Math.min(6, actualRadius));\n    }\n    \n    return {\n      scale: scale,\n      radius: actualRadius,\n      showInternalLabel: scale >= 1.5,\n      showExternalLabel: scale >= this.config.tinyThresholdScale,\n      showMinimalMode: scale < this.config.tinyThresholdScale,\n      fontSize: Math.max(10, Math.min(16, 12 * scale)),\n      directionFontSize: Math.max(8, Math.min(12, 10 * scale)),\n      labelOffset: Math.max(8, this.config.labelOffset * Math.min(scale, 1.5)),\n      borderWidth: Math.max(1, Math.min(3, this.config.pointBorderWidth * scale))\n    };\n  }\n  /**\n   * 渲染当前图像的所有自定义标注\n   */\n  renderCustomAnnotations(currentImageId) {\n    if (!currentImageId) return;\n    \n    const annotations = this.customAnnotationManager.getAnnotationsByImageId(currentImageId);\n    if (annotations.length === 0 && !this.annotationTool.state.isCustomRegionDragging) return;\n    \n    // 获取显示策略\n    const displayStrategy = this.getCustomAnnotationDisplayStrategy();\n    \n    // 按类型分组渲染\n    const pointAnnotations = annotations.filter(ann => {\n      const type = this.customAnnotationManager.getCustomType(ann.typeId || ann.customTypeId);\n      return type?.type === 'point';\n    });\n    \n    const regionAnnotations = annotations.filter(ann => {\n      const type = this.customAnnotationManager.getCustomType(ann.typeId || ann.customTypeId);\n      return type?.type === 'region';\n    });\n    \n    // 先渲染区域，再渲染点（点在上层）\n    regionAnnotations.forEach(annotation => {\n      this.renderRegionAnnotation(annotation, displayStrategy);\n    });\n    \n    pointAnnotations.forEach(annotation => {\n      this.renderPointAnnotation(annotation, displayStrategy);\n    });\n    \n    // 渲染拖拽预览\n    this.renderDragPreview(displayStrategy);\n  }\n\n  /**\n   * 渲染点标注\n   */\n  renderPointAnnotation(annotation, displayStrategy) {\n    const typeId = annotation.typeId || annotation.customTypeId;\n    const customType = this.customAnnotationManager.getCustomType(typeId);\n    if (!customType) return;\n    \n    const screenPos = this.annotationTool.imageToScreen(annotation.x, annotation.y);\n    \n    // 确定透明度\n    let alpha = 1;\n    if (this.hoveredAnnotation === annotation) {\n      alpha = this.config.hoverAlpha;\n    } else if (this.selectedAnnotation === annotation) {\n      alpha = this.config.selectedAlpha;\n    }\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = alpha;\n    \n    // 绘制点\n    this.ctx.beginPath();\n    this.ctx.arc(screenPos.x, screenPos.y, displayStrategy.radius, 0, 2 * Math.PI);\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fill();\n    \n    // 绘制边框\n    this.ctx.strokeStyle = this.config.pointBorderColor;\n    this.ctx.lineWidth = displayStrategy.borderWidth;\n    this.ctx.stroke();\n    \n    // 根据显示策略绘制标签\n    if (displayStrategy.showInternalLabel) {\n      // 在标注点内部显示序号\n      this.ctx.fillStyle = this.config.pointBorderColor;\n      this.ctx.font = `bold ${displayStrategy.fontSize}px Arial`;\n      this.ctx.textAlign = 'center';\n      this.ctx.textBaseline = 'middle';\n      this.ctx.fillText(annotation.order.toString(), screenPos.x, screenPos.y);\n    } else if (displayStrategy.showExternalLabel) {\n      // 在标注点外部显示标签\n      this.renderPointLabel(annotation, screenPos, customType, alpha, displayStrategy);\n    } else if (displayStrategy.showMinimalMode) {\n      // 极小模式：只显示标注点，悬停时显示详细信息\n      if (this.hoveredAnnotation === annotation) {\n        this.createTooltip(screenPos.x, screenPos.y, annotation.order, customType, annotation, displayStrategy);\n      }\n    }\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 渲染区域标注\n   */\n  renderRegionAnnotation(annotation, displayStrategy) {\n    const typeId = annotation.typeId || annotation.customTypeId;\n    const customType = this.customAnnotationManager.getCustomType(typeId);\n    if (!customType) return;\n    \n    const topLeft = this.annotationTool.imageToScreen(annotation.x, annotation.y);\n    const bottomRight = this.annotationTool.imageToScreen(\n      annotation.x + annotation.width,\n      annotation.y + annotation.height\n    );\n    \n    const screenWidth = bottomRight.x - topLeft.x;\n    const screenHeight = bottomRight.y - topLeft.y;\n    \n    // 确定透明度\n    let alpha = 1;\n    if (this.hoveredAnnotation === annotation) {\n      alpha = this.config.hoverAlpha;\n    } else if (this.selectedAnnotation === annotation) {\n      alpha = this.config.selectedAlpha;\n    }\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = alpha;\n    \n    // 绘制填充区域\n    this.ctx.fillStyle = customType.color;\n    this.ctx.globalAlpha = alpha * this.config.regionFillAlpha;\n    this.ctx.fillRect(topLeft.x, topLeft.y, screenWidth, screenHeight);\n    \n    // 绘制边框（使用缩放相关的线宽）\n    this.ctx.globalAlpha = alpha;\n    this.ctx.strokeStyle = customType.color;\n    this.ctx.lineWidth = displayStrategy.borderWidth;\n    this.ctx.strokeRect(topLeft.x, topLeft.y, screenWidth, screenHeight);\n    \n    // 绘制编号（在区域中心）\n    const centerX = topLeft.x + screenWidth / 2;\n    const centerY = topLeft.y + screenHeight / 2;\n    \n    if (displayStrategy.showInternalLabel && Math.min(screenWidth, screenHeight) > 20) {\n      // 在区域内部显示编号\n      this.ctx.fillStyle = customType.color;\n      this.ctx.font = `bold ${displayStrategy.fontSize}px Arial`;\n      this.ctx.textAlign = 'center';\n      this.ctx.textBaseline = 'middle';\n      this.ctx.fillText(annotation.order.toString(), centerX, centerY);\n    }\n    \n    // 绘制外部标签\n    if (displayStrategy.showExternalLabel) {\n      this.renderRegionLabel(annotation, { x: centerX, y: topLeft.y }, customType, alpha, displayStrategy);\n    }\n    \n    this.ctx.restore();\n\n    // 只在选中状态时绘制 resize 手柄\n    if (this.selectedAnnotation === annotation) {\n      // 绘制 resize 手柄（根据缩放调整大小）\n      // 放大命中与可视尺寸，提升可点中性\n      const handleSize = Math.max(8, Math.min(14, 10 * (displayStrategy?.scale || 1)));\n      const half = handleSize / 2;\n      const corners = [\n        { x: topLeft.x, y: topLeft.y }, // nw\n        { x: topLeft.x + screenWidth, y: topLeft.y }, // ne\n        { x: topLeft.x, y: topLeft.y + screenHeight }, // sw\n        { x: topLeft.x + screenWidth, y: topLeft.y + screenHeight } // se\n      ];\n      const edges = [\n        { x: topLeft.x + screenWidth / 2, y: topLeft.y }, // n\n        { x: topLeft.x + screenWidth / 2, y: topLeft.y + screenHeight }, // s\n        { x: topLeft.x, y: topLeft.y + screenHeight / 2 }, // w\n        { x: topLeft.x + screenWidth, y: topLeft.y + screenHeight / 2 } // e\n      ];\n\n      this.ctx.save();\n      this.ctx.fillStyle = '#ffffff';\n      this.ctx.strokeStyle = customType.color;\n      this.ctx.lineWidth = 1.5;\n      // corners\n      corners.forEach(pt => {\n        this.ctx.fillRect(pt.x - half, pt.y - half, handleSize, handleSize);\n        this.ctx.strokeRect(pt.x - half, pt.y - half, handleSize, handleSize);\n      });\n      // edges\n      edges.forEach(pt => {\n        this.ctx.fillRect(pt.x - half, pt.y - half, handleSize, handleSize);\n        this.ctx.strokeRect(pt.x - half, pt.y - half, handleSize, handleSize);\n      });\n      this.ctx.restore();\n    }\n  }\n\n  /**\n   * 命中测试：返回区域手柄类型或 null\n   */\n  getRegionHandleAt(screenPos, annotation) {\n    // 统一存储兼容：既支持旧的 typeId，也支持统一系统的 customTypeId\n    const typeId = annotation.typeId || annotation.customTypeId;\n    const customType = this.customAnnotationManager.getCustomType(typeId);\n    if (!customType || customType.type !== 'region') return null;\n    const topLeft = this.annotationTool.imageToScreen(annotation.x, annotation.y);\n    const bottomRight = this.annotationTool.imageToScreen(annotation.x + annotation.width, annotation.y + annotation.height);\n    const center = { x: (topLeft.x + bottomRight.x) / 2, y: (topLeft.y + bottomRight.y) / 2 };\n    const scale = this.annotationTool.state.scale || 1;\n    // 与渲染一致，适度放大命中盒\n    const size = Math.max(8, Math.min(14, 10 * scale));\n    const half = size / 2;\n\n    function hit(pt) {\n      return Math.abs(screenPos.x - pt.x) <= half && Math.abs(screenPos.y - pt.y) <= half;\n    }\n\n    // corners\n    if (hit(topLeft)) return 'nw';\n    if (hit({ x: bottomRight.x, y: topLeft.y })) return 'ne';\n    if (hit({ x: topLeft.x, y: bottomRight.y })) return 'sw';\n    if (hit(bottomRight)) return 'se';\n\n    // edges\n    if (hit({ x: center.x, y: topLeft.y })) return 'n';\n    if (hit({ x: center.x, y: bottomRight.y })) return 's';\n    if (hit({ x: topLeft.x, y: center.y })) return 'w';\n    if (hit({ x: bottomRight.x, y: center.y })) return 'e';\n\n    return null;\n  }\n\n  /**\n   * 渲染点标注标签\n   */\n  renderPointLabel(annotation, screenPos, customType, alpha, displayStrategy) {\n    const labelY = screenPos.y - displayStrategy.radius - displayStrategy.labelOffset;\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = alpha;\n    \n    // 创建标签文本\n    const labelText = `${customType.name} #${annotation.order}`;\n    this.ctx.font = `${displayStrategy.fontSize}px Arial`;\n    const textMetrics = this.ctx.measureText(labelText);\n    const textWidth = textMetrics.width;\n    \n    // 绘制标签背景\n    const padding = 4;\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fillRect(\n      screenPos.x - textWidth / 2 - padding,\n      labelY - displayStrategy.fontSize / 2 - padding,\n      textWidth + padding * 2,\n      displayStrategy.fontSize + padding * 2\n    );\n    \n    // 绘制标签文本\n    this.ctx.fillStyle = '#ffffff';\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(labelText, screenPos.x, labelY);\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 渲染区域标注标签\n   */\n  renderRegionLabel(annotation, screenPos, customType, alpha, displayStrategy) {\n    const labelY = screenPos.y - displayStrategy.labelOffset;\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = alpha;\n    \n    // 创建标签文本\n    const labelText = `${customType.name} #${annotation.order}`;\n    this.ctx.font = `${displayStrategy.fontSize}px Arial`;\n    const textMetrics = this.ctx.measureText(labelText);\n    const textWidth = textMetrics.width;\n    \n    // 绘制标签背景\n    const padding = 4;\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fillRect(\n      screenPos.x - textWidth / 2 - padding,\n      labelY - displayStrategy.fontSize / 2 - padding,\n      textWidth + padding * 2,\n      displayStrategy.fontSize + padding * 2\n    );\n    \n    // 绘制标签文本\n    this.ctx.fillStyle = '#ffffff';\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(labelText, screenPos.x, labelY);\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 检查鼠标位置是否在自定义标注上\n   */\n  getCustomAnnotationAt(screenPos, currentImageId) {\n    if (!currentImageId) return null;\n    \n    const annotations = this.customAnnotationManager.getAnnotationsByImageId(currentImageId);\n    \n    // 按渲染顺序的反序检查（点在区域之上）\n    const pointAnnotations = annotations.filter(ann => {\n      const type = this.customAnnotationManager.getCustomType(ann.typeId);\n      return type?.type === 'point';\n    });\n    \n    const regionAnnotations = annotations.filter(ann => {\n      const type = this.customAnnotationManager.getCustomType(ann.typeId);\n      return type?.type === 'region';\n    });\n    \n    // 先检查点标注\n    for (const annotation of pointAnnotations) {\n      if (this.isPointInAnnotation(screenPos, annotation)) {\n        return annotation;\n      }\n    }\n    \n    // 再检查区域标注\n    for (const annotation of regionAnnotations) {\n      if (this.isPointInAnnotation(screenPos, annotation)) {\n        return annotation;\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * 检查点是否在标注内\n   */\n  isPointInAnnotation(screenPos, annotation) {\n    const typeId = annotation.typeId || annotation.customTypeId;\n    const customType = this.customAnnotationManager.getCustomType(typeId);\n    if (!customType) return false;\n    \n    const displayStrategy = this.getCustomAnnotationDisplayStrategy();\n    \n    if (customType.type === 'point') {\n      const annotationScreenPos = this.annotationTool.imageToScreen(annotation.x, annotation.y);\n      const distance = Math.sqrt(\n        Math.pow(screenPos.x - annotationScreenPos.x, 2) +\n        Math.pow(screenPos.y - annotationScreenPos.y, 2)\n      );\n      return distance <= displayStrategy.radius + 5; // 5px tolerance\n    } else if (customType.type === 'region') {\n      const topLeft = this.annotationTool.imageToScreen(annotation.x, annotation.y);\n      const bottomRight = this.annotationTool.imageToScreen(\n        annotation.x + annotation.width,\n        annotation.y + annotation.height\n      );\n      \n      return screenPos.x >= topLeft.x && screenPos.x <= bottomRight.x &&\n             screenPos.y >= topLeft.y && screenPos.y <= bottomRight.y;\n    }\n    \n    return false;\n  }\n\n  /**\n   * 设置悬停的标注\n   */\n  setHoveredAnnotation(annotation) {\n    this.hoveredAnnotation = annotation;\n  }\n\n  /**\n   * 设置选中的标注\n   */\n  setSelectedAnnotation(annotation) {\n    this.selectedAnnotation = annotation;\n  }\n\n  /**\n   * 获取悬停的标注\n   */\n  getHoveredAnnotation() {\n    return this.hoveredAnnotation;\n  }\n\n  /**\n   * 获取选中的标注\n   */\n  getSelectedAnnotation() {\n    return this.selectedAnnotation;\n  }\n\n  /**\n   * 清除悬停状态\n   */\n  clearHover() {\n    this.hoveredAnnotation = null;\n  }\n\n  /**\n   * 清除选中状态\n   */\n  clearSelection() {\n    this.selectedAnnotation = null;\n  }\n\n  /**\n   * 创建悬停提示\n   */\n  createTooltip(x, y, order, customType, annotation, displayStrategy) {\n    // 只在极小模式下显示提示\n    const canvas = this.canvas;\n    const container = canvas.parentElement;\n    \n    // 移除已存在的提示\n    const existingTooltip = container.querySelector('.custom-annotation-tooltip');\n    if (existingTooltip) {\n      existingTooltip.remove();\n    }\n    \n    // 创建提示元素\n    const tooltip = document.createElement('div');\n    tooltip.className = 'custom-annotation-tooltip';\n    tooltip.style.cssText = `\n      position: absolute;\n      background: rgba(0, 0, 0, 0.8);\n      color: white;\n      padding: 6px 10px;\n      border-radius: 4px;\n      font-size: 12px;\n      z-index: 1000;\n      pointer-events: none;\n      white-space: nowrap;\n    `;\n    \n    const coordinateText = `(${Math.round(annotation.x)}, ${Math.round(annotation.y)})`;\n    tooltip.innerHTML = `\n      <div>${customType.name} #${order}</div>\n      <div style=\"font-size: 10px; opacity: 0.8;\">Position: ${coordinateText}</div>\n    `;\n    \n    // 计算提示位置\n    const rect = canvas.getBoundingClientRect();\n    const containerRect = container.getBoundingClientRect();\n    \n    const offsetX = rect.left - containerRect.left;\n    const offsetY = rect.top - containerRect.top;\n    \n    tooltip.style.left = (offsetX + x - 60) + 'px';\n    tooltip.style.top = (offsetY + y - 60) + 'px';\n    \n    container.appendChild(tooltip);\n    \n    // 自动移除提示\n    setTimeout(() => {\n      if (tooltip.parentElement) {\n        tooltip.remove();\n      }\n    }, 2000);\n  }\n  /**\n   * 渲染拖拽预览（区域标注）\n   */\n  renderDragPreview(displayStrategy) {\n    if (!this.annotationTool.state.isCustomRegionDragging) return;\n    \n    const startScreenPos = this.annotationTool.state.customRegionStartPoint;\n    const currentScreenPos = this.annotationTool.state.customRegionCurrentPoint;\n    \n    if (!startScreenPos || !currentScreenPos) return;\n    \n    const customType = this.customAnnotationManager.getCurrentCustomType();\n    if (!customType || customType.type !== 'region') return;\n    \n    const left = Math.min(startScreenPos.x, currentScreenPos.x);\n    const top = Math.min(startScreenPos.y, currentScreenPos.y);\n    const width = Math.abs(currentScreenPos.x - startScreenPos.x);\n    const height = Math.abs(currentScreenPos.y - startScreenPos.y);\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = 0.5;\n    \n    // 绘制预览填充\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fillRect(left, top, width, height);\n    \n    // 绘制预览边框（使用缩放相关的线宽）\n    this.ctx.strokeStyle = customType.color;\n    this.ctx.lineWidth = displayStrategy ? displayStrategy.borderWidth : 2;\n    this.ctx.setLineDash([5, 5]);\n    this.ctx.strokeRect(left, top, width, height);\n    \n    // 绘制尺寸信息\n    this.ctx.globalAlpha = 0.8;\n    this.ctx.fillStyle = '#000000';\n    this.ctx.font = `${displayStrategy ? displayStrategy.fontSize : 12}px Arial`;\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    \n    const sizeText = `${Math.round(width)}x${Math.round(height)}`;\n    this.ctx.fillText(sizeText, left + width/2, top + height/2);\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 渲染点预览（点标注）\n   */\n  renderPointPreview(screenPos, customType) {\n    if (!customType || customType.type !== 'point') return;\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = 0.7;\n    \n    // 绘制预览点\n    this.ctx.beginPath();\n    this.ctx.arc(screenPos.x, screenPos.y, this.config.pointRadius, 0, 2 * Math.PI);\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fill();\n    \n    // 绘制预览边框\n    this.ctx.strokeStyle = this.config.pointBorderColor;\n    this.ctx.lineWidth = this.config.pointBorderWidth;\n    this.ctx.setLineDash([3, 3]);\n    this.ctx.stroke();\n    \n    // 绘制预览标签\n    this.ctx.setLineDash([]);\n    this.ctx.fillStyle = this.config.pointBorderColor;\n    this.ctx.font = `bold ${this.config.labelFontSize}px Arial`;\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText('?', screenPos.x, screenPos.y);\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 更新配置\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n  }\n\n  /**\n   * 获取当前配置\n   */\n  getConfig() {\n    return { ...this.config };\n  }\n  \n  /**\n   * 开始拖拽自定义标注\n   */\n  startDrag(annotation, screenPosition, handle = null) {\n    this.draggedAnnotation = annotation;\n    this.dragStartPosition = {\n      screen: screenPosition,\n      annotation: {\n        x: annotation.x,\n        y: annotation.y,\n        ...(annotation.width && { width: annotation.width }),\n        ...(annotation.height && { height: annotation.height })\n      }\n    };\n    this.dragCurrentPosition = screenPosition;\n    this.isDragging = true;\n    this.dragHandle = handle;\n    this.dragMode = handle ? 'resize' : 'move';\n    \n    console.log('Started dragging custom annotation:', annotation.id);\n  }\n  \n  /**\n   * 更新拖拽位置\n   */\n  updateDrag(screenPosition) {\n    if (!this.isDragging || !this.draggedAnnotation || !this.dragStartPosition) {\n      return false;\n    }\n    \n    this.dragCurrentPosition = screenPosition;\n    \n    // 计算拖拽偏移量\n    const deltaX = screenPosition.x - this.dragStartPosition.screen.x;\n    const deltaY = screenPosition.y - this.dragStartPosition.screen.y;\n    \n    // 转换为图像坐标偏移\n    const imageDeltaX = deltaX / this.annotationTool.state.scale;\n    const imageDeltaY = deltaY / this.annotationTool.state.scale;\n    const a = this.draggedAnnotation;\n    const start = this.dragStartPosition.annotation;\n\n    if (this.dragMode === 'resize' && start.width && start.height) {\n      // 以不同手柄调整矩形\n      let x = start.x;\n      let y = start.y;\n      let w = start.width;\n      let h = start.height;\n\n      switch (this.dragHandle) {\n        case 'n':\n          y = start.y + imageDeltaY;\n          h = start.height - imageDeltaY;\n          break;\n        case 's':\n          h = start.height + imageDeltaY;\n          break;\n        case 'w':\n          x = start.x + imageDeltaX;\n          w = start.width - imageDeltaX;\n          break;\n        case 'e':\n          w = start.width + imageDeltaX;\n          break;\n        case 'nw':\n          x = start.x + imageDeltaX; w = start.width - imageDeltaX;\n          y = start.y + imageDeltaY; h = start.height - imageDeltaY;\n          break;\n        case 'ne':\n          y = start.y + imageDeltaY; h = start.height - imageDeltaY;\n          w = start.width + imageDeltaX;\n          break;\n        case 'sw':\n          x = start.x + imageDeltaX; w = start.width - imageDeltaX;\n          h = start.height + imageDeltaY;\n          break;\n        case 'se':\n          w = start.width + imageDeltaX;\n          h = start.height + imageDeltaY;\n          break;\n      }\n\n      // 最小尺寸约束（图像坐标）\n      const minSize = 2 / this.annotationTool.state.scale; // 至少 ~2px 屏幕\n      w = Math.max(minSize, w);\n      h = Math.max(minSize, h);\n\n      a.x = x; a.y = y; a.width = w; a.height = h;\n      this.constrainAnnotationPosition(a);\n    } else {\n      // 移动\n      a.x = start.x + imageDeltaX;\n      a.y = start.y + imageDeltaY;\n      this.constrainAnnotationPosition(a);\n    }\n    \n    return true;\n  }\n  \n  /**\n   * 完成拖拽\n   */\n  finishDrag() {\n    if (!this.isDragging || !this.draggedAnnotation) {\n      return null;\n    }\n    \n    const draggedAnnotation = this.draggedAnnotation;\n    const startPosition = this.dragStartPosition;\n    \n    // 检查是否有实际移动\n    const moved = Math.abs(draggedAnnotation.x - startPosition.annotation.x) > 1 ||\n                  Math.abs(draggedAnnotation.y - startPosition.annotation.y) > 1 ||\n                  (startPosition.annotation.width && Math.abs((draggedAnnotation.width || 0) - startPosition.annotation.width) > 1) ||\n                  (startPosition.annotation.height && Math.abs((draggedAnnotation.height || 0) - startPosition.annotation.height) > 1);\n    \n    // 清除拖拽状态\n    this.draggedAnnotation = null;\n    this.dragStartPosition = null;\n    this.dragCurrentPosition = null;\n    this.isDragging = false;\n    \n    console.log('Finished dragging custom annotation:', draggedAnnotation.id, 'Moved:', moved);\n    \n    return {\n      annotation: draggedAnnotation,\n      moved: moved,\n      startPosition: startPosition.annotation\n    };\n  }\n  \n  /**\n   * 取消拖拽\n   */\n  cancelDrag() {\n    if (!this.isDragging || !this.draggedAnnotation || !this.dragStartPosition) {\n      return;\n    }\n    \n    // 恢复原始位置\n    this.draggedAnnotation.x = this.dragStartPosition.annotation.x;\n    this.draggedAnnotation.y = this.dragStartPosition.annotation.y;\n    \n    if (this.dragStartPosition.annotation.width) {\n      this.draggedAnnotation.width = this.dragStartPosition.annotation.width;\n    }\n    if (this.dragStartPosition.annotation.height) {\n      this.draggedAnnotation.height = this.dragStartPosition.annotation.height;\n    }\n    \n    // 清除拖拽状态\n    this.draggedAnnotation = null;\n    this.dragStartPosition = null;\n    this.dragCurrentPosition = null;\n    this.isDragging = false;\n    \n    console.log('Cancelled dragging custom annotation');\n  }\n  \n  /**\n   * 约束标注位置在图像边界内\n   */\n  constrainAnnotationPosition(annotation) {\n    if (!this.annotationTool.imageElement) return;\n    \n    const imageWidth = this.annotationTool.imageElement.width;\n    const imageHeight = this.annotationTool.imageElement.height;\n    \n    // 约束位置\n    annotation.x = Math.max(0, Math.min(imageWidth, annotation.x));\n    annotation.y = Math.max(0, Math.min(imageHeight, annotation.y));\n    \n    // 对于区域标注，还需要约束尺寸\n    if (annotation.width && annotation.height) {\n      annotation.width = Math.min(annotation.width, imageWidth - annotation.x);\n      annotation.height = Math.min(annotation.height, imageHeight - annotation.y);\n    }\n  }\n  \n  /**\n   * 检查是否正在拖拽\n   */\n  isDraggingAnnotation() {\n    return this.isDragging;\n  }\n  \n  /**\n   * 获取当前拖拽的标注\n   */\n  getDraggedAnnotation() {\n    return this.draggedAnnotation;\n  }\n  \n  /**\n   * 渲染拖拽预览效果\n   */\n  renderDragPreview(displayStrategy) {\n    if (!this.isDragging || !this.draggedAnnotation) return;\n    \n    const typeId = this.draggedAnnotation.typeId || this.draggedAnnotation.customTypeId;\n    const customType = this.customAnnotationManager.getCustomType(typeId);\n    if (!customType) return;\n    \n    // 绘制拖拽预览（半透明）\n    this.ctx.save();\n    this.ctx.globalAlpha = 0.6;\n    \n    if (customType.type === 'point') {\n      this.renderPointAnnotation(this.draggedAnnotation, displayStrategy);\n    } else if (customType.type === 'region') {\n      this.renderRegionAnnotation(this.draggedAnnotation, displayStrategy);\n    }\n    \n    this.ctx.restore();\n  }\n}"],"names":["exports","constructor","annotationTool","customAnnotationManager","this","ctx","canvas","config","basePointRadius","minPointRadius","maxPointRadius","pointScaleFactor","pointBorderColor","pointBorderWidth","regionBorderWidth","regionFillAlpha","baseLabelFontSize","labelOffset","labelThresholdScale","tinyThresholdScale","hoverAlpha","selectedAlpha","hoveredAnnotation","selectedAnnotation","draggedAnnotation","dragStartPosition","dragCurrentPosition","isDragging","dragMode","dragHandle","console","log","getCustomAnnotationDisplayStrategy","scale","state","actualRadius","fontSize","Math","max","min","textBasedRadius","maxRadiusForLargeScale","radius","showInternalLabel","showExternalLabel","showMinimalMode","directionFontSize","borderWidth","renderCustomAnnotations","currentImageId","annotations","getAnnotationsByImageId","length","isCustomRegionDragging","displayStrategy","pointAnnotations","filter","ann","type","getCustomType","typeId","customTypeId","forEach","annotation","renderRegionAnnotation","renderPointAnnotation","renderDragPreview","customType","screenPos","imageToScreen","x","y","alpha","save","globalAlpha","beginPath","arc","PI","fillStyle","color","fill","strokeStyle","lineWidth","stroke","font","textAlign","textBaseline","fillText","order","toString","renderPointLabel","createTooltip","restore","topLeft","bottomRight","width","height","screenWidth","screenHeight","fillRect","strokeRect","centerX","centerY","renderRegionLabel","handleSize","half","corners","edges","pt","getRegionHandleAt","center","hit","abs","labelY","labelText","name","textWidth","measureText","padding","getCustomAnnotationAt","regionAnnotations","isPointInAnnotation","annotationScreenPos","sqrt","pow","setHoveredAnnotation","setSelectedAnnotation","getHoveredAnnotation","getSelectedAnnotation","clearHover","clearSelection","container","parentElement","existingTooltip","querySelector","remove","tooltip","document","createElement","className","style","cssText","coordinateText","round","innerHTML","rect","getBoundingClientRect","containerRect","offsetX","left","offsetY","top","appendChild","setTimeout","startScreenPos","customRegionStartPoint","currentScreenPos","customRegionCurrentPoint","getCurrentCustomType","setLineDash","sizeText","renderPointPreview","pointRadius","labelFontSize","updateConfig","newConfig","getConfig","startDrag","screenPosition","handle","screen","id","updateDrag","deltaX","deltaY","imageDeltaX","imageDeltaY","a","start","w","h","minSize","constrainAnnotationPosition","finishDrag","startPosition","moved","cancelDrag","imageElement","imageWidth","imageHeight","isDraggingAnnotation","getDraggedAnnotation"],"mappings":"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"}