class y{constructor(t,i){this.annotationTool=t,this.customAnnotationManager=i,this.ctx=t.ctx,this.canvas=t.canvas,this.config={basePointRadius:8,minPointRadius:4,maxPointRadius:20,pointScaleFactor:.8,pointBorderColor:"#ffffff",pointBorderWidth:2,regionBorderWidth:2,regionFillAlpha:.2,baseLabelFontSize:12,labelOffset:16,labelThresholdScale:.6,tinyThresholdScale:.3,hoverAlpha:.8,selectedAlpha:.9},this.hoveredAnnotation=null,this.selectedAnnotation=null,this.draggedAnnotation=null,this.dragStartPosition=null,this.dragCurrentPosition=null,this.isDragging=!1,this.dragMode="move",this.dragHandle=null,console.log("CustomAnnotationRenderer initialized")}getCustomAnnotationDisplayStrategy(){const t=this.annotationTool.state.scale,i=3;let s;if(t>=1.5){const h=Math.max(10,Math.min(16,12*t)),e=Math.max(8,h*.7),o=Math.min(12,8+(t-1.5)*2);s=Math.min(e,o),s=Math.max(8,s)}else s=i+(t-.1)*1.5,s=Math.max(i,Math.min(6,s));return{scale:t,radius:s,showInternalLabel:t>=1.5,showExternalLabel:t>=this.config.tinyThresholdScale,showMinimalMode:t<this.config.tinyThresholdScale,fontSize:Math.max(10,Math.min(16,12*t)),directionFontSize:Math.max(8,Math.min(12,10*t)),labelOffset:Math.max(8,this.config.labelOffset*Math.min(t,1.5)),borderWidth:Math.max(1,Math.min(3,this.config.pointBorderWidth*t))}}renderCustomAnnotations(t){if(!t)return;const i=this.customAnnotationManager.getAnnotationsByImageId(t);if(i.length===0&&!this.annotationTool.state.isCustomRegionDragging)return;const s=this.getCustomAnnotationDisplayStrategy(),h=i.filter(o=>{const n=this.customAnnotationManager.getCustomType(o.typeId||o.customTypeId);return(n==null?void 0:n.type)==="point"});i.filter(o=>{const n=this.customAnnotationManager.getCustomType(o.typeId||o.customTypeId);return(n==null?void 0:n.type)==="region"}).forEach(o=>{this.renderRegionAnnotation(o,s)}),h.forEach(o=>{this.renderPointAnnotation(o,s)}),this.renderDragPreview(s)}renderPointAnnotation(t,i){const s=t.typeId||t.customTypeId,h=this.customAnnotationManager.getCustomType(s);if(!h)return;const e=this.annotationTool.imageToScreen(t.x,t.y);let o=1;this.hoveredAnnotation===t?o=this.config.hoverAlpha:this.selectedAnnotation===t&&(o=this.config.selectedAlpha),this.ctx.save(),this.ctx.globalAlpha=o,this.ctx.beginPath(),this.ctx.arc(e.x,e.y,i.radius,0,2*Math.PI),this.ctx.fillStyle=h.color,this.ctx.fill(),this.ctx.strokeStyle=this.config.pointBorderColor,this.ctx.lineWidth=i.borderWidth,this.ctx.stroke(),i.showInternalLabel?(this.ctx.fillStyle=this.config.pointBorderColor,this.ctx.font="bold ".concat(i.fontSize,"px Arial"),this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText(t.order.toString(),e.x,e.y)):i.showExternalLabel?this.renderPointLabel(t,e,h,o,i):i.showMinimalMode&&this.hoveredAnnotation===t&&this.createTooltip(e.x,e.y,t.order,h,t,i),this.ctx.restore()}renderRegionAnnotation(t,i){const s=t.typeId||t.customTypeId,h=this.customAnnotationManager.getCustomType(s);if(!h)return;const e=this.annotationTool.imageToScreen(t.x,t.y),o=this.annotationTool.imageToScreen(t.x+t.width,t.y+t.height),n=o.x-e.x,r=o.y-e.y;let c=1;this.hoveredAnnotation===t?c=this.config.hoverAlpha:this.selectedAnnotation===t&&(c=this.config.selectedAlpha),this.ctx.save(),this.ctx.globalAlpha=c,this.ctx.fillStyle=h.color,this.ctx.globalAlpha=c*this.config.regionFillAlpha,this.ctx.fillRect(e.x,e.y,n,r),this.ctx.globalAlpha=c,this.ctx.strokeStyle=h.color,this.ctx.lineWidth=i.borderWidth,this.ctx.strokeRect(e.x,e.y,n,r);const a=e.x+n/2,l=e.y+r/2;if(i.showInternalLabel&&Math.min(n,r)>20&&(this.ctx.fillStyle=h.color,this.ctx.font="bold ".concat(i.fontSize,"px Arial"),this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText(t.order.toString(),a,l)),i.showExternalLabel&&this.renderRegionLabel(t,{x:a,y:e.y},h,c,i),this.ctx.restore(),this.selectedAnnotation===t){const g=Math.max(8,Math.min(14,10*((i==null?void 0:i.scale)||1))),x=g/2,f=[{x:e.x,y:e.y},{x:e.x+n,y:e.y},{x:e.x,y:e.y+r},{x:e.x+n,y:e.y+r}],u=[{x:e.x+n/2,y:e.y},{x:e.x+n/2,y:e.y+r},{x:e.x,y:e.y+r/2},{x:e.x+n,y:e.y+r/2}];this.ctx.save(),this.ctx.fillStyle="#ffffff",this.ctx.strokeStyle=h.color,this.ctx.lineWidth=1.5,f.forEach(d=>{this.ctx.fillRect(d.x-x,d.y-x,g,g),this.ctx.strokeRect(d.x-x,d.y-x,g,g)}),u.forEach(d=>{this.ctx.fillRect(d.x-x,d.y-x,g,g),this.ctx.strokeRect(d.x-x,d.y-x,g,g)}),this.ctx.restore()}}getRegionHandleAt(t,i){const s=i.typeId||i.customTypeId,h=this.customAnnotationManager.getCustomType(s);if(!h||h.type!=="region")return null;const e=this.annotationTool.imageToScreen(i.x,i.y),o=this.annotationTool.imageToScreen(i.x+i.width,i.y+i.height),n={x:(e.x+o.x)/2,y:(e.y+o.y)/2},r=this.annotationTool.state.scale||1,a=Math.max(8,Math.min(14,10*r))/2;function l(g){return Math.abs(t.x-g.x)<=a&&Math.abs(t.y-g.y)<=a}return l(e)?"nw":l({x:o.x,y:e.y})?"ne":l({x:e.x,y:o.y})?"sw":l(o)?"se":l({x:n.x,y:e.y})?"n":l({x:n.x,y:o.y})?"s":l({x:e.x,y:n.y})?"w":l({x:o.x,y:n.y})?"e":null}renderPointLabel(t,i,s,h,e){const o=i.y-e.radius-e.labelOffset;this.ctx.save(),this.ctx.globalAlpha=h;const n="".concat(s.name," #").concat(t.order);this.ctx.font="".concat(e.fontSize,"px Arial");const c=this.ctx.measureText(n).width,a=4;this.ctx.fillStyle=s.color,this.ctx.fillRect(i.x-c/2-a,o-e.fontSize/2-a,c+a*2,e.fontSize+a*2),this.ctx.fillStyle="#ffffff",this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText(n,i.x,o),this.ctx.restore()}renderRegionLabel(t,i,s,h,e){const o=i.y-e.labelOffset;this.ctx.save(),this.ctx.globalAlpha=h;const n="".concat(s.name," #").concat(t.order);this.ctx.font="".concat(e.fontSize,"px Arial");const c=this.ctx.measureText(n).width,a=4;this.ctx.fillStyle=s.color,this.ctx.fillRect(i.x-c/2-a,o-e.fontSize/2-a,c+a*2,e.fontSize+a*2),this.ctx.fillStyle="#ffffff",this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText(n,i.x,o),this.ctx.restore()}getCustomAnnotationAt(t,i){if(!i)return null;const s=this.customAnnotationManager.getAnnotationsByImageId(i),h=s.filter(o=>{const n=this.customAnnotationManager.getCustomType(o.typeId);return(n==null?void 0:n.type)==="point"}),e=s.filter(o=>{const n=this.customAnnotationManager.getCustomType(o.typeId);return(n==null?void 0:n.type)==="region"});for(const o of h)if(this.isPointInAnnotation(t,o))return o;for(const o of e)if(this.isPointInAnnotation(t,o))return o;return null}isPointInAnnotation(t,i){const s=i.typeId||i.customTypeId,h=this.customAnnotationManager.getCustomType(s);if(!h)return!1;const e=this.getCustomAnnotationDisplayStrategy();if(h.type==="point"){const o=this.annotationTool.imageToScreen(i.x,i.y);return Math.sqrt(Math.pow(t.x-o.x,2)+Math.pow(t.y-o.y,2))<=e.radius+5}else if(h.type==="region"){const o=this.annotationTool.imageToScreen(i.x,i.y),n=this.annotationTool.imageToScreen(i.x+i.width,i.y+i.height);return t.x>=o.x&&t.x<=n.x&&t.y>=o.y&&t.y<=n.y}return!1}setHoveredAnnotation(t){this.hoveredAnnotation=t}setSelectedAnnotation(t){this.selectedAnnotation=t}getHoveredAnnotation(){return this.hoveredAnnotation}getSelectedAnnotation(){return this.selectedAnnotation}clearHover(){this.hoveredAnnotation=null}clearSelection(){this.selectedAnnotation=null}createTooltip(t,i,s,h,e,o){const n=this.canvas,r=n.parentElement,c=r.querySelector(".custom-annotation-tooltip");c&&c.remove();const a=document.createElement("div");a.className="custom-annotation-tooltip",a.style.cssText="\n      position: absolute;\n      background: rgba(0, 0, 0, 0.8);\n      color: white;\n      padding: 6px 10px;\n      border-radius: 4px;\n      font-size: 12px;\n      z-index: 1000;\n      pointer-events: none;\n      white-space: nowrap;\n    ";const l="(".concat(Math.round(e.x),", ").concat(Math.round(e.y),")");a.innerHTML="\n      <div>".concat(h.name," #").concat(s,'</div>\n      <div style="font-size: 10px; opacity: 0.8;">Position: ').concat(l,"</div>\n    ");const g=n.getBoundingClientRect(),x=r.getBoundingClientRect(),f=g.left-x.left,u=g.top-x.top;a.style.left=f+t-60+"px",a.style.top=u+i-60+"px",r.appendChild(a),setTimeout(()=>{a.parentElement&&a.remove()},2e3)}renderDragPreview(t){if(!this.annotationTool.state.isCustomRegionDragging)return;const i=this.annotationTool.state.customRegionStartPoint,s=this.annotationTool.state.customRegionCurrentPoint;if(!i||!s)return;const h=this.customAnnotationManager.getCurrentCustomType();if(!h||h.type!=="region")return;const e=Math.min(i.x,s.x),o=Math.min(i.y,s.y),n=Math.abs(s.x-i.x),r=Math.abs(s.y-i.y);this.ctx.save(),this.ctx.globalAlpha=.5,this.ctx.fillStyle=h.color,this.ctx.fillRect(e,o,n,r),this.ctx.strokeStyle=h.color,this.ctx.lineWidth=t?t.borderWidth:2,this.ctx.setLineDash([5,5]),this.ctx.strokeRect(e,o,n,r),this.ctx.globalAlpha=.8,this.ctx.fillStyle="#000000",this.ctx.font="".concat(t?t.fontSize:12,"px Arial"),this.ctx.textAlign="center",this.ctx.textBaseline="middle";const c="".concat(Math.round(n),"x").concat(Math.round(r));this.ctx.fillText(c,e+n/2,o+r/2),this.ctx.restore()}renderPointPreview(t,i){!i||i.type!=="point"||(this.ctx.save(),this.ctx.globalAlpha=.7,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,this.config.pointRadius,0,2*Math.PI),this.ctx.fillStyle=i.color,this.ctx.fill(),this.ctx.strokeStyle=this.config.pointBorderColor,this.ctx.lineWidth=this.config.pointBorderWidth,this.ctx.setLineDash([3,3]),this.ctx.stroke(),this.ctx.setLineDash([]),this.ctx.fillStyle=this.config.pointBorderColor,this.ctx.font="bold ".concat(this.config.labelFontSize,"px Arial"),this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText("?",t.x,t.y),this.ctx.restore())}updateConfig(t){this.config={...this.config,...t}}getConfig(){return{...this.config}}startDrag(t,i,s=null){this.draggedAnnotation=t,this.dragStartPosition={screen:i,annotation:{x:t.x,y:t.y,...t.width&&{width:t.width},...t.height&&{height:t.height}}},this.dragCurrentPosition=i,this.isDragging=!0,this.dragHandle=s,this.dragMode=s?"resize":"move",console.log("Started dragging custom annotation:",t.id)}updateDrag(t){if(!this.isDragging||!this.draggedAnnotation||!this.dragStartPosition)return!1;this.dragCurrentPosition=t;const i=t.x-this.dragStartPosition.screen.x,s=t.y-this.dragStartPosition.screen.y,h=i/this.annotationTool.state.scale,e=s/this.annotationTool.state.scale,o=this.draggedAnnotation,n=this.dragStartPosition.annotation;if(this.dragMode==="resize"&&n.width&&n.height){let r=n.x,c=n.y,a=n.width,l=n.height;switch(this.dragHandle){case"n":c=n.y+e,l=n.height-e;break;case"s":l=n.height+e;break;case"w":r=n.x+h,a=n.width-h;break;case"e":a=n.width+h;break;case"nw":r=n.x+h,a=n.width-h,c=n.y+e,l=n.height-e;break;case"ne":c=n.y+e,l=n.height-e,a=n.width+h;break;case"sw":r=n.x+h,a=n.width-h,l=n.height+e;break;case"se":a=n.width+h,l=n.height+e;break}const g=2/this.annotationTool.state.scale;a=Math.max(g,a),l=Math.max(g,l),o.x=r,o.y=c,o.width=a,o.height=l,this.constrainAnnotationPosition(o)}else o.x=n.x+h,o.y=n.y+e,this.constrainAnnotationPosition(o);return!0}finishDrag(){if(!this.isDragging||!this.draggedAnnotation)return null;const t=this.draggedAnnotation,i=this.dragStartPosition,s=Math.abs(t.x-i.annotation.x)>1||Math.abs(t.y-i.annotation.y)>1||i.annotation.width&&Math.abs((t.width||0)-i.annotation.width)>1||i.annotation.height&&Math.abs((t.height||0)-i.annotation.height)>1;return this.draggedAnnotation=null,this.dragStartPosition=null,this.dragCurrentPosition=null,this.isDragging=!1,console.log("Finished dragging custom annotation:",t.id,"Moved:",s),{annotation:t,moved:s,startPosition:i.annotation}}cancelDrag(){!this.isDragging||!this.draggedAnnotation||!this.dragStartPosition||(this.draggedAnnotation.x=this.dragStartPosition.annotation.x,this.draggedAnnotation.y=this.dragStartPosition.annotation.y,this.dragStartPosition.annotation.width&&(this.draggedAnnotation.width=this.dragStartPosition.annotation.width),this.dragStartPosition.annotation.height&&(this.draggedAnnotation.height=this.dragStartPosition.annotation.height),this.draggedAnnotation=null,this.dragStartPosition=null,this.dragCurrentPosition=null,this.isDragging=!1,console.log("Cancelled dragging custom annotation"))}constrainAnnotationPosition(t){if(!this.annotationTool.imageElement)return;const i=this.annotationTool.imageElement.width,s=this.annotationTool.imageElement.height;t.x=Math.max(0,Math.min(i,t.x)),t.y=Math.max(0,Math.min(s,t.y)),t.width&&t.height&&(t.width=Math.min(t.width,i-t.x),t.height=Math.min(t.height,s-t.y))}isDraggingAnnotation(){return this.isDragging}getDraggedAnnotation(){return this.draggedAnnotation}renderDragPreview(t){if(!this.isDragging||!this.draggedAnnotation)return;const i=this.draggedAnnotation.typeId||this.draggedAnnotation.customTypeId,s=this.customAnnotationManager.getCustomType(i);s&&(this.ctx.save(),this.ctx.globalAlpha=.6,s.type==="point"?this.renderPointAnnotation(this.draggedAnnotation,t):s.type==="region"&&this.renderRegionAnnotation(this.draggedAnnotation,t),this.ctx.restore())}}export{y as CustomAnnotationRenderer};
//# sourceMappingURL=CustomAnnotationRenderer-CeI367Mf.js.map
