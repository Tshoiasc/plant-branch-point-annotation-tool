{"version":3,"file":"CustomAnnotationRenderer-legacy-BimQP5Wt.js","sources":["../../src/core/CustomAnnotationRenderer.js"],"sourcesContent":["/**\n * 自定义标注渲染器\n * \n * 功能：\n * - 渲染自定义点标注和区域标注\n * - 提供视觉反馈和交互\n * - 支持编号系统和颜色自定义\n * - 与AnnotationTool集成\n */\n\nexport class CustomAnnotationRenderer {\n  constructor(annotationTool, customAnnotationManager) {\n    this.annotationTool = annotationTool;\n    this.customAnnotationManager = customAnnotationManager;\n    this.ctx = annotationTool.ctx;\n    this.canvas = annotationTool.canvas;\n    \n    // 渲染配置\n    this.config = {\n      // 基础配置\n      basePointRadius: 8,\n      minPointRadius: 4,\n      maxPointRadius: 20,\n      pointScaleFactor: 0.8,\n      \n      // 颜色配置\n      pointBorderColor: '#ffffff',\n      pointBorderWidth: 2,\n      regionBorderWidth: 2,\n      regionFillAlpha: 0.2,\n      \n      // 标签配置\n      baseLabelFontSize: 12,\n      labelOffset: 16,\n      labelThresholdScale: 0.6,\n      tinyThresholdScale: 0.3,\n      \n      // 状态配置\n      hoverAlpha: 0.8,\n      selectedAlpha: 0.9\n    };\n    \n    // 当前状态\n    this.hoveredAnnotation = null;\n    this.selectedAnnotation = null;\n    \n    // 拖拽状态\n    this.draggedAnnotation = null;\n    this.dragStartPosition = null;\n    this.dragCurrentPosition = null;\n    this.isDragging = false;\n    \n    console.log('CustomAnnotationRenderer initialized');\n  }\n\n  /**\n   * 获取自定义标注显示策略\n   */\n  getCustomAnnotationDisplayStrategy() {\n    const scale = this.annotationTool.state.scale;\n    \n    // 计算实际的标注点半径\n    const smallRadius = 3; // 更小的默认点半径\n    let actualRadius;\n    \n    if (scale >= 1.5) {\n      // 大缩放：使用能容纳文字的最小圆圈\n      const fontSize = Math.max(10, Math.min(16, 12 * scale));\n      const textBasedRadius = Math.max(8, fontSize * 0.7);\n      const maxRadiusForLargeScale = Math.min(12, 8 + (scale - 1.5) * 2);\n      \n      actualRadius = Math.min(textBasedRadius, maxRadiusForLargeScale);\n      actualRadius = Math.max(8, actualRadius);\n    } else {\n      // 默认和小缩放：使用更小的点\n      actualRadius = smallRadius + (scale - 0.1) * 1.5;\n      actualRadius = Math.max(smallRadius, Math.min(6, actualRadius));\n    }\n    \n    return {\n      scale: scale,\n      radius: actualRadius,\n      showInternalLabel: scale >= 1.5,\n      showExternalLabel: scale >= this.config.tinyThresholdScale,\n      showMinimalMode: scale < this.config.tinyThresholdScale,\n      fontSize: Math.max(10, Math.min(16, 12 * scale)),\n      directionFontSize: Math.max(8, Math.min(12, 10 * scale)),\n      labelOffset: Math.max(8, this.config.labelOffset * Math.min(scale, 1.5)),\n      borderWidth: Math.max(1, Math.min(3, this.config.pointBorderWidth * scale))\n    };\n  }\n  /**\n   * 渲染当前图像的所有自定义标注\n   */\n  renderCustomAnnotations(currentImageId) {\n    if (!currentImageId) return;\n    \n    const annotations = this.customAnnotationManager.getAnnotationsByImageId(currentImageId);\n    if (annotations.length === 0 && !this.annotationTool.state.isCustomRegionDragging) return;\n    \n    // 获取显示策略\n    const displayStrategy = this.getCustomAnnotationDisplayStrategy();\n    \n    // 按类型分组渲染\n    const pointAnnotations = annotations.filter(ann => {\n      const type = this.customAnnotationManager.getCustomType(ann.typeId);\n      return type?.type === 'point';\n    });\n    \n    const regionAnnotations = annotations.filter(ann => {\n      const type = this.customAnnotationManager.getCustomType(ann.typeId);\n      return type?.type === 'region';\n    });\n    \n    // 先渲染区域，再渲染点（点在上层）\n    regionAnnotations.forEach(annotation => {\n      this.renderRegionAnnotation(annotation, displayStrategy);\n    });\n    \n    pointAnnotations.forEach(annotation => {\n      this.renderPointAnnotation(annotation, displayStrategy);\n    });\n    \n    // 渲染拖拽预览\n    this.renderDragPreview(displayStrategy);\n  }\n\n  /**\n   * 渲染点标注\n   */\n  renderPointAnnotation(annotation, displayStrategy) {\n    const customType = this.customAnnotationManager.getCustomType(annotation.typeId);\n    if (!customType) return;\n    \n    const screenPos = this.annotationTool.imageToScreen(annotation.x, annotation.y);\n    \n    // 确定透明度\n    let alpha = 1;\n    if (this.hoveredAnnotation === annotation) {\n      alpha = this.config.hoverAlpha;\n    } else if (this.selectedAnnotation === annotation) {\n      alpha = this.config.selectedAlpha;\n    }\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = alpha;\n    \n    // 绘制点\n    this.ctx.beginPath();\n    this.ctx.arc(screenPos.x, screenPos.y, displayStrategy.radius, 0, 2 * Math.PI);\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fill();\n    \n    // 绘制边框\n    this.ctx.strokeStyle = this.config.pointBorderColor;\n    this.ctx.lineWidth = displayStrategy.borderWidth;\n    this.ctx.stroke();\n    \n    // 根据显示策略绘制标签\n    if (displayStrategy.showInternalLabel) {\n      // 在标注点内部显示序号\n      this.ctx.fillStyle = this.config.pointBorderColor;\n      this.ctx.font = `bold ${displayStrategy.fontSize}px Arial`;\n      this.ctx.textAlign = 'center';\n      this.ctx.textBaseline = 'middle';\n      this.ctx.fillText(annotation.order.toString(), screenPos.x, screenPos.y);\n    } else if (displayStrategy.showExternalLabel) {\n      // 在标注点外部显示标签\n      this.renderPointLabel(annotation, screenPos, customType, alpha, displayStrategy);\n    } else if (displayStrategy.showMinimalMode) {\n      // 极小模式：只显示标注点，悬停时显示详细信息\n      if (this.hoveredAnnotation === annotation) {\n        this.createTooltip(screenPos.x, screenPos.y, annotation.order, customType, annotation, displayStrategy);\n      }\n    }\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 渲染区域标注\n   */\n  renderRegionAnnotation(annotation, displayStrategy) {\n    const customType = this.customAnnotationManager.getCustomType(annotation.typeId);\n    if (!customType) return;\n    \n    const topLeft = this.annotationTool.imageToScreen(annotation.x, annotation.y);\n    const bottomRight = this.annotationTool.imageToScreen(\n      annotation.x + annotation.width,\n      annotation.y + annotation.height\n    );\n    \n    const screenWidth = bottomRight.x - topLeft.x;\n    const screenHeight = bottomRight.y - topLeft.y;\n    \n    // 确定透明度\n    let alpha = 1;\n    if (this.hoveredAnnotation === annotation) {\n      alpha = this.config.hoverAlpha;\n    } else if (this.selectedAnnotation === annotation) {\n      alpha = this.config.selectedAlpha;\n    }\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = alpha;\n    \n    // 绘制填充区域\n    this.ctx.fillStyle = customType.color;\n    this.ctx.globalAlpha = alpha * this.config.regionFillAlpha;\n    this.ctx.fillRect(topLeft.x, topLeft.y, screenWidth, screenHeight);\n    \n    // 绘制边框（使用缩放相关的线宽）\n    this.ctx.globalAlpha = alpha;\n    this.ctx.strokeStyle = customType.color;\n    this.ctx.lineWidth = displayStrategy.borderWidth;\n    this.ctx.strokeRect(topLeft.x, topLeft.y, screenWidth, screenHeight);\n    \n    // 绘制编号（在区域中心）\n    const centerX = topLeft.x + screenWidth / 2;\n    const centerY = topLeft.y + screenHeight / 2;\n    \n    if (displayStrategy.showInternalLabel && Math.min(screenWidth, screenHeight) > 20) {\n      // 在区域内部显示编号\n      this.ctx.fillStyle = customType.color;\n      this.ctx.font = `bold ${displayStrategy.fontSize}px Arial`;\n      this.ctx.textAlign = 'center';\n      this.ctx.textBaseline = 'middle';\n      this.ctx.fillText(annotation.order.toString(), centerX, centerY);\n    }\n    \n    // 绘制外部标签\n    if (displayStrategy.showExternalLabel) {\n      this.renderRegionLabel(annotation, { x: centerX, y: topLeft.y }, customType, alpha, displayStrategy);\n    }\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 渲染点标注标签\n   */\n  renderPointLabel(annotation, screenPos, customType, alpha, displayStrategy) {\n    const labelY = screenPos.y - displayStrategy.radius - displayStrategy.labelOffset;\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = alpha;\n    \n    // 创建标签文本\n    const labelText = `${customType.name} #${annotation.order}`;\n    this.ctx.font = `${displayStrategy.fontSize}px Arial`;\n    const textMetrics = this.ctx.measureText(labelText);\n    const textWidth = textMetrics.width;\n    \n    // 绘制标签背景\n    const padding = 4;\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fillRect(\n      screenPos.x - textWidth / 2 - padding,\n      labelY - displayStrategy.fontSize / 2 - padding,\n      textWidth + padding * 2,\n      displayStrategy.fontSize + padding * 2\n    );\n    \n    // 绘制标签文本\n    this.ctx.fillStyle = '#ffffff';\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(labelText, screenPos.x, labelY);\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 渲染区域标注标签\n   */\n  renderRegionLabel(annotation, screenPos, customType, alpha, displayStrategy) {\n    const labelY = screenPos.y - displayStrategy.labelOffset;\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = alpha;\n    \n    // 创建标签文本\n    const labelText = `${customType.name} #${annotation.order}`;\n    this.ctx.font = `${displayStrategy.fontSize}px Arial`;\n    const textMetrics = this.ctx.measureText(labelText);\n    const textWidth = textMetrics.width;\n    \n    // 绘制标签背景\n    const padding = 4;\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fillRect(\n      screenPos.x - textWidth / 2 - padding,\n      labelY - displayStrategy.fontSize / 2 - padding,\n      textWidth + padding * 2,\n      displayStrategy.fontSize + padding * 2\n    );\n    \n    // 绘制标签文本\n    this.ctx.fillStyle = '#ffffff';\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(labelText, screenPos.x, labelY);\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 检查鼠标位置是否在自定义标注上\n   */\n  getCustomAnnotationAt(screenPos, currentImageId) {\n    if (!currentImageId) return null;\n    \n    const annotations = this.customAnnotationManager.getAnnotationsByImageId(currentImageId);\n    \n    // 按渲染顺序的反序检查（点在区域之上）\n    const pointAnnotations = annotations.filter(ann => {\n      const type = this.customAnnotationManager.getCustomType(ann.typeId);\n      return type?.type === 'point';\n    });\n    \n    const regionAnnotations = annotations.filter(ann => {\n      const type = this.customAnnotationManager.getCustomType(ann.typeId);\n      return type?.type === 'region';\n    });\n    \n    // 先检查点标注\n    for (const annotation of pointAnnotations) {\n      if (this.isPointInAnnotation(screenPos, annotation)) {\n        return annotation;\n      }\n    }\n    \n    // 再检查区域标注\n    for (const annotation of regionAnnotations) {\n      if (this.isPointInAnnotation(screenPos, annotation)) {\n        return annotation;\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * 检查点是否在标注内\n   */\n  isPointInAnnotation(screenPos, annotation) {\n    const customType = this.customAnnotationManager.getCustomType(annotation.typeId);\n    if (!customType) return false;\n    \n    const displayStrategy = this.getCustomAnnotationDisplayStrategy();\n    \n    if (customType.type === 'point') {\n      const annotationScreenPos = this.annotationTool.imageToScreen(annotation.x, annotation.y);\n      const distance = Math.sqrt(\n        Math.pow(screenPos.x - annotationScreenPos.x, 2) +\n        Math.pow(screenPos.y - annotationScreenPos.y, 2)\n      );\n      return distance <= displayStrategy.radius + 5; // 5px tolerance\n    } else if (customType.type === 'region') {\n      const topLeft = this.annotationTool.imageToScreen(annotation.x, annotation.y);\n      const bottomRight = this.annotationTool.imageToScreen(\n        annotation.x + annotation.width,\n        annotation.y + annotation.height\n      );\n      \n      return screenPos.x >= topLeft.x && screenPos.x <= bottomRight.x &&\n             screenPos.y >= topLeft.y && screenPos.y <= bottomRight.y;\n    }\n    \n    return false;\n  }\n\n  /**\n   * 设置悬停的标注\n   */\n  setHoveredAnnotation(annotation) {\n    this.hoveredAnnotation = annotation;\n  }\n\n  /**\n   * 设置选中的标注\n   */\n  setSelectedAnnotation(annotation) {\n    this.selectedAnnotation = annotation;\n  }\n\n  /**\n   * 获取悬停的标注\n   */\n  getHoveredAnnotation() {\n    return this.hoveredAnnotation;\n  }\n\n  /**\n   * 获取选中的标注\n   */\n  getSelectedAnnotation() {\n    return this.selectedAnnotation;\n  }\n\n  /**\n   * 清除悬停状态\n   */\n  clearHover() {\n    this.hoveredAnnotation = null;\n  }\n\n  /**\n   * 清除选中状态\n   */\n  clearSelection() {\n    this.selectedAnnotation = null;\n  }\n\n  /**\n   * 创建悬停提示\n   */\n  createTooltip(x, y, order, customType, annotation, displayStrategy) {\n    // 只在极小模式下显示提示\n    const canvas = this.canvas;\n    const container = canvas.parentElement;\n    \n    // 移除已存在的提示\n    const existingTooltip = container.querySelector('.custom-annotation-tooltip');\n    if (existingTooltip) {\n      existingTooltip.remove();\n    }\n    \n    // 创建提示元素\n    const tooltip = document.createElement('div');\n    tooltip.className = 'custom-annotation-tooltip';\n    tooltip.style.cssText = `\n      position: absolute;\n      background: rgba(0, 0, 0, 0.8);\n      color: white;\n      padding: 6px 10px;\n      border-radius: 4px;\n      font-size: 12px;\n      z-index: 1000;\n      pointer-events: none;\n      white-space: nowrap;\n    `;\n    \n    const coordinateText = `(${Math.round(annotation.x)}, ${Math.round(annotation.y)})`;\n    tooltip.innerHTML = `\n      <div>${customType.name} #${order}</div>\n      <div style=\"font-size: 10px; opacity: 0.8;\">Position: ${coordinateText}</div>\n    `;\n    \n    // 计算提示位置\n    const rect = canvas.getBoundingClientRect();\n    const containerRect = container.getBoundingClientRect();\n    \n    const offsetX = rect.left - containerRect.left;\n    const offsetY = rect.top - containerRect.top;\n    \n    tooltip.style.left = (offsetX + x - 60) + 'px';\n    tooltip.style.top = (offsetY + y - 60) + 'px';\n    \n    container.appendChild(tooltip);\n    \n    // 自动移除提示\n    setTimeout(() => {\n      if (tooltip.parentElement) {\n        tooltip.remove();\n      }\n    }, 2000);\n  }\n  /**\n   * 渲染拖拽预览（区域标注）\n   */\n  renderDragPreview(displayStrategy) {\n    if (!this.annotationTool.state.isCustomRegionDragging) return;\n    \n    const startScreenPos = this.annotationTool.state.customRegionStartPoint;\n    const currentScreenPos = this.annotationTool.state.customRegionCurrentPoint;\n    \n    if (!startScreenPos || !currentScreenPos) return;\n    \n    const customType = this.customAnnotationManager.getCurrentCustomType();\n    if (!customType || customType.type !== 'region') return;\n    \n    const left = Math.min(startScreenPos.x, currentScreenPos.x);\n    const top = Math.min(startScreenPos.y, currentScreenPos.y);\n    const width = Math.abs(currentScreenPos.x - startScreenPos.x);\n    const height = Math.abs(currentScreenPos.y - startScreenPos.y);\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = 0.5;\n    \n    // 绘制预览填充\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fillRect(left, top, width, height);\n    \n    // 绘制预览边框（使用缩放相关的线宽）\n    this.ctx.strokeStyle = customType.color;\n    this.ctx.lineWidth = displayStrategy ? displayStrategy.borderWidth : 2;\n    this.ctx.setLineDash([5, 5]);\n    this.ctx.strokeRect(left, top, width, height);\n    \n    // 绘制尺寸信息\n    this.ctx.globalAlpha = 0.8;\n    this.ctx.fillStyle = '#000000';\n    this.ctx.font = `${displayStrategy ? displayStrategy.fontSize : 12}px Arial`;\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    \n    const sizeText = `${Math.round(width)}x${Math.round(height)}`;\n    this.ctx.fillText(sizeText, left + width/2, top + height/2);\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 渲染点预览（点标注）\n   */\n  renderPointPreview(screenPos, customType) {\n    if (!customType || customType.type !== 'point') return;\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = 0.7;\n    \n    // 绘制预览点\n    this.ctx.beginPath();\n    this.ctx.arc(screenPos.x, screenPos.y, this.config.pointRadius, 0, 2 * Math.PI);\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fill();\n    \n    // 绘制预览边框\n    this.ctx.strokeStyle = this.config.pointBorderColor;\n    this.ctx.lineWidth = this.config.pointBorderWidth;\n    this.ctx.setLineDash([3, 3]);\n    this.ctx.stroke();\n    \n    // 绘制预览标签\n    this.ctx.setLineDash([]);\n    this.ctx.fillStyle = this.config.pointBorderColor;\n    this.ctx.font = `bold ${this.config.labelFontSize}px Arial`;\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText('?', screenPos.x, screenPos.y);\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 更新配置\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n  }\n\n  /**\n   * 获取当前配置\n   */\n  getConfig() {\n    return { ...this.config };\n  }\n  \n  /**\n   * 开始拖拽自定义标注\n   */\n  startDrag(annotation, screenPosition) {\n    this.draggedAnnotation = annotation;\n    this.dragStartPosition = {\n      screen: screenPosition,\n      annotation: {\n        x: annotation.x,\n        y: annotation.y,\n        ...(annotation.width && { width: annotation.width }),\n        ...(annotation.height && { height: annotation.height })\n      }\n    };\n    this.dragCurrentPosition = screenPosition;\n    this.isDragging = true;\n    \n    console.log('Started dragging custom annotation:', annotation.id);\n  }\n  \n  /**\n   * 更新拖拽位置\n   */\n  updateDrag(screenPosition) {\n    if (!this.isDragging || !this.draggedAnnotation || !this.dragStartPosition) {\n      return false;\n    }\n    \n    this.dragCurrentPosition = screenPosition;\n    \n    // 计算拖拽偏移量\n    const deltaX = screenPosition.x - this.dragStartPosition.screen.x;\n    const deltaY = screenPosition.y - this.dragStartPosition.screen.y;\n    \n    // 转换为图像坐标偏移\n    const imageDeltaX = deltaX / this.annotationTool.state.scale;\n    const imageDeltaY = deltaY / this.annotationTool.state.scale;\n    \n    // 更新标注位置\n    this.draggedAnnotation.x = this.dragStartPosition.annotation.x + imageDeltaX;\n    this.draggedAnnotation.y = this.dragStartPosition.annotation.y + imageDeltaY;\n    \n    // 确保标注保持在图像边界内\n    this.constrainAnnotationPosition(this.draggedAnnotation);\n    \n    return true;\n  }\n  \n  /**\n   * 完成拖拽\n   */\n  finishDrag() {\n    if (!this.isDragging || !this.draggedAnnotation) {\n      return null;\n    }\n    \n    const draggedAnnotation = this.draggedAnnotation;\n    const startPosition = this.dragStartPosition;\n    \n    // 检查是否有实际移动\n    const moved = Math.abs(draggedAnnotation.x - startPosition.annotation.x) > 1 ||\n                  Math.abs(draggedAnnotation.y - startPosition.annotation.y) > 1;\n    \n    // 清除拖拽状态\n    this.draggedAnnotation = null;\n    this.dragStartPosition = null;\n    this.dragCurrentPosition = null;\n    this.isDragging = false;\n    \n    console.log('Finished dragging custom annotation:', draggedAnnotation.id, 'Moved:', moved);\n    \n    return {\n      annotation: draggedAnnotation,\n      moved: moved,\n      startPosition: startPosition.annotation\n    };\n  }\n  \n  /**\n   * 取消拖拽\n   */\n  cancelDrag() {\n    if (!this.isDragging || !this.draggedAnnotation || !this.dragStartPosition) {\n      return;\n    }\n    \n    // 恢复原始位置\n    this.draggedAnnotation.x = this.dragStartPosition.annotation.x;\n    this.draggedAnnotation.y = this.dragStartPosition.annotation.y;\n    \n    if (this.dragStartPosition.annotation.width) {\n      this.draggedAnnotation.width = this.dragStartPosition.annotation.width;\n    }\n    if (this.dragStartPosition.annotation.height) {\n      this.draggedAnnotation.height = this.dragStartPosition.annotation.height;\n    }\n    \n    // 清除拖拽状态\n    this.draggedAnnotation = null;\n    this.dragStartPosition = null;\n    this.dragCurrentPosition = null;\n    this.isDragging = false;\n    \n    console.log('Cancelled dragging custom annotation');\n  }\n  \n  /**\n   * 约束标注位置在图像边界内\n   */\n  constrainAnnotationPosition(annotation) {\n    if (!this.annotationTool.imageElement) return;\n    \n    const imageWidth = this.annotationTool.imageElement.width;\n    const imageHeight = this.annotationTool.imageElement.height;\n    \n    // 约束位置\n    annotation.x = Math.max(0, Math.min(imageWidth, annotation.x));\n    annotation.y = Math.max(0, Math.min(imageHeight, annotation.y));\n    \n    // 对于区域标注，还需要约束尺寸\n    if (annotation.width && annotation.height) {\n      annotation.width = Math.min(annotation.width, imageWidth - annotation.x);\n      annotation.height = Math.min(annotation.height, imageHeight - annotation.y);\n    }\n  }\n  \n  /**\n   * 检查是否正在拖拽\n   */\n  isDraggingAnnotation() {\n    return this.isDragging;\n  }\n  \n  /**\n   * 获取当前拖拽的标注\n   */\n  getDraggedAnnotation() {\n    return this.draggedAnnotation;\n  }\n  \n  /**\n   * 渲染拖拽预览效果\n   */\n  renderDragPreview(displayStrategy) {\n    if (!this.isDragging || !this.draggedAnnotation) return;\n    \n    const customType = this.customAnnotationManager.getCustomType(this.draggedAnnotation.typeId);\n    if (!customType) return;\n    \n    // 绘制拖拽预览（半透明）\n    this.ctx.save();\n    this.ctx.globalAlpha = 0.6;\n    \n    if (customType.type === 'point') {\n      this.renderPointAnnotation(this.draggedAnnotation, displayStrategy);\n    } else if (customType.type === 'region') {\n      this.renderRegionAnnotation(this.draggedAnnotation, displayStrategy);\n    }\n    \n    this.ctx.restore();\n  }\n}"],"names":["exports","constructor","annotationTool","customAnnotationManager","this","ctx","canvas","config","basePointRadius","minPointRadius","maxPointRadius","pointScaleFactor","pointBorderColor","pointBorderWidth","regionBorderWidth","regionFillAlpha","baseLabelFontSize","labelOffset","labelThresholdScale","tinyThresholdScale","hoverAlpha","selectedAlpha","hoveredAnnotation","selectedAnnotation","draggedAnnotation","dragStartPosition","dragCurrentPosition","isDragging","console","log","getCustomAnnotationDisplayStrategy","scale","state","actualRadius","fontSize","Math","max","min","textBasedRadius","maxRadiusForLargeScale","radius","showInternalLabel","showExternalLabel","showMinimalMode","directionFontSize","borderWidth","renderCustomAnnotations","currentImageId","annotations","getAnnotationsByImageId","length","isCustomRegionDragging","displayStrategy","pointAnnotations","filter","ann","type","getCustomType","typeId","forEach","annotation","renderRegionAnnotation","renderPointAnnotation","renderDragPreview","customType","screenPos","imageToScreen","x","y","alpha","save","globalAlpha","beginPath","arc","PI","fillStyle","color","fill","strokeStyle","lineWidth","stroke","font","textAlign","textBaseline","fillText","order","toString","renderPointLabel","createTooltip","restore","topLeft","bottomRight","width","height","screenWidth","screenHeight","fillRect","strokeRect","centerX","centerY","renderRegionLabel","labelY","labelText","name","textWidth","measureText","padding","getCustomAnnotationAt","regionAnnotations","isPointInAnnotation","annotationScreenPos","sqrt","pow","setHoveredAnnotation","setSelectedAnnotation","getHoveredAnnotation","getSelectedAnnotation","clearHover","clearSelection","container","parentElement","existingTooltip","querySelector","remove","tooltip","document","createElement","className","style","cssText","coordinateText","round","innerHTML","rect","getBoundingClientRect","containerRect","offsetX","left","offsetY","top","appendChild","setTimeout","startScreenPos","customRegionStartPoint","currentScreenPos","customRegionCurrentPoint","getCurrentCustomType","abs","setLineDash","sizeText","renderPointPreview","pointRadius","labelFontSize","updateConfig","newConfig","getConfig","startDrag","screenPosition","screen","id","updateDrag","deltaX","deltaY","imageDeltaX","imageDeltaY","constrainAnnotationPosition","finishDrag","startPosition","moved","cancelDrag","imageElement","imageWidth","imageHeight","isDraggingAnnotation","getDraggedAnnotation"],"mappings":"wEAgtBAA,EAAA,2BAtsBO,MACLC,WAAAA,CAAYC,EAAgBC,GAC1BC,KAAKF,eAAiBA,EACtBE,KAAKD,wBAA0BA,EAC/BC,KAAKC,IAAMH,EAAeG,IAC1BD,KAAKE,OAASJ,EAAeI,OAG7BF,KAAKG,OAAS,CAEZC,gBAAiB,EACjBC,eAAgB,EAChBC,eAAgB,GAChBC,iBAAkB,GAGlBC,iBAAkB,UAClBC,iBAAkB,EAClBC,kBAAmB,EACnBC,gBAAiB,GAGjBC,kBAAmB,GACnBC,YAAa,GACbC,oBAAqB,GACrBC,mBAAoB,GAGpBC,WAAY,GACZC,cAAe,IAIjBjB,KAAKkB,kBAAoB,KACzBlB,KAAKmB,mBAAqB,KAG1BnB,KAAKoB,kBAAoB,KACzBpB,KAAKqB,kBAAoB,KACzBrB,KAAKsB,oBAAsB,KAC3BtB,KAAKuB,YAAa,EAElBC,QAAQC,IAAI,uCAChB,CAKEC,kCAAAA,GACE,MAAMC,EAAQ3B,KAAKF,eAAe8B,MAAMD,MAIxC,IAAIE,EAEJ,GAAIF,GAAS,IAAK,CAEhB,MAAMG,EAAWC,KAAKC,IAAI,GAAID,KAAKE,IAAI,GAAI,GAAKN,IAC1CO,EAAkBH,KAAKC,IAAI,EAAc,GAAXF,GAC9BK,EAAyBJ,KAAKE,IAAI,GAAI,EAAoB,GAAfN,EAAQ,MAEzDE,EAAeE,KAAKE,IAAIC,EAAiBC,GACzCN,EAAeE,KAAKC,IAAI,EAAGH,EACjC,MAEMA,EAbkB,EAa2B,KAAfF,EAAQ,IACtCE,EAAeE,KAAKC,IAdF,EAcmBD,KAAKE,IAAI,EAAGJ,IAGnD,MAAO,CACLF,MAAOA,EACPS,OAAQP,EACRQ,kBAAmBV,GAAS,IAC5BW,kBAAmBX,GAAS3B,KAAKG,OAAOY,mBACxCwB,gBAAiBZ,EAAQ3B,KAAKG,OAAOY,mBACrCe,SAAUC,KAAKC,IAAI,GAAID,KAAKE,IAAI,GAAI,GAAKN,IACzCa,kBAAmBT,KAAKC,IAAI,EAAGD,KAAKE,IAAI,GAAI,GAAKN,IACjDd,YAAakB,KAAKC,IAAI,EAAGhC,KAAKG,OAAOU,YAAckB,KAAKE,IAAIN,EAAO,MACnEc,YAAaV,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAGjC,KAAKG,OAAOM,iBAAmBkB,IAE1E,CAIEe,uBAAAA,CAAwBC,GACtB,IAAKA,EAAgB,OAErB,MAAMC,EAAc5C,KAAKD,wBAAwB8C,wBAAwBF,GACzE,GAA2B,IAAvBC,EAAYE,SAAiB9C,KAAKF,eAAe8B,MAAMmB,uBAAwB,OAGnF,MAAMC,EAAkBhD,KAAK0B,qCAGvBuB,EAAmBL,EAAYM,OAAOC,IAC1C,MAAMC,EAAOpD,KAAKD,wBAAwBsD,cAAcF,EAAIG,QAC5D,MAAsB,UAAfF,GAAMA,OAGWR,EAAYM,OAAOC,IAC3C,MAAMC,EAAOpD,KAAKD,wBAAwBsD,cAAcF,EAAIG,QAC5D,MAAsB,WAAfF,GAAMA,OAIGG,QAAQC,IACxBxD,KAAKyD,uBAAuBD,EAAYR,KAG1CC,EAAiBM,QAAQC,IACvBxD,KAAK0D,sBAAsBF,EAAYR,KAIzChD,KAAK2D,kBAAkBX,EAC3B,CAKEU,qBAAAA,CAAsBF,EAAYR,GAChC,MAAMY,EAAa5D,KAAKD,wBAAwBsD,cAAcG,EAAWF,QACzE,IAAKM,EAAY,OAEjB,MAAMC,EAAY7D,KAAKF,eAAegE,cAAcN,EAAWO,EAAGP,EAAWQ,GAG7E,IAAIC,EAAQ,EACRjE,KAAKkB,oBAAsBsC,EAC7BS,EAAQjE,KAAKG,OAAOa,WACXhB,KAAKmB,qBAAuBqC,IACrCS,EAAQjE,KAAKG,OAAOc,eAGtBjB,KAAKC,IAAIiE,OACTlE,KAAKC,IAAIkE,YAAcF,EAGvBjE,KAAKC,IAAImE,YACTpE,KAAKC,IAAIoE,IAAIR,EAAUE,EAAGF,EAAUG,EAAGhB,EAAgBZ,OAAQ,EAAG,EAAIL,KAAKuC,IAC3EtE,KAAKC,IAAIsE,UAAYX,EAAWY,MAChCxE,KAAKC,IAAIwE,OAGTzE,KAAKC,IAAIyE,YAAc1E,KAAKG,OAAOK,iBACnCR,KAAKC,IAAI0E,UAAY3B,EAAgBP,YACrCzC,KAAKC,IAAI2E,SAGL5B,EAAgBX,mBAElBrC,KAAKC,IAAIsE,UAAYvE,KAAKG,OAAOK,iBACjCR,KAAKC,IAAI4E,KAAO,QAAQ7B,EAAgBlB,mBACxC9B,KAAKC,IAAI6E,UAAY,SACrB9E,KAAKC,IAAI8E,aAAe,SACxB/E,KAAKC,IAAI+E,SAASxB,EAAWyB,MAAMC,WAAYrB,EAAUE,EAAGF,EAAUG,IAC7DhB,EAAgBV,kBAEzBtC,KAAKmF,iBAAiB3B,EAAYK,EAAWD,EAAYK,EAAOjB,GACvDA,EAAgBT,iBAErBvC,KAAKkB,oBAAsBsC,GAC7BxD,KAAKoF,cAAcvB,EAAUE,EAAGF,EAAUG,EAAGR,EAAWyB,MAAOrB,EAAYJ,EAAYR,GAI3FhD,KAAKC,IAAIoF,SACb,CAKE5B,sBAAAA,CAAuBD,EAAYR,GACjC,MAAMY,EAAa5D,KAAKD,wBAAwBsD,cAAcG,EAAWF,QACzE,IAAKM,EAAY,OAEjB,MAAM0B,EAAUtF,KAAKF,eAAegE,cAAcN,EAAWO,EAAGP,EAAWQ,GACrEuB,EAAcvF,KAAKF,eAAegE,cACtCN,EAAWO,EAAIP,EAAWgC,MAC1BhC,EAAWQ,EAAIR,EAAWiC,QAGtBC,EAAcH,EAAYxB,EAAIuB,EAAQvB,EACtC4B,EAAeJ,EAAYvB,EAAIsB,EAAQtB,EAG7C,IAAIC,EAAQ,EACRjE,KAAKkB,oBAAsBsC,EAC7BS,EAAQjE,KAAKG,OAAOa,WACXhB,KAAKmB,qBAAuBqC,IACrCS,EAAQjE,KAAKG,OAAOc,eAGtBjB,KAAKC,IAAIiE,OACTlE,KAAKC,IAAIkE,YAAcF,EAGvBjE,KAAKC,IAAIsE,UAAYX,EAAWY,MAChCxE,KAAKC,IAAIkE,YAAcF,EAAQjE,KAAKG,OAAOQ,gBAC3CX,KAAKC,IAAI2F,SAASN,EAAQvB,EAAGuB,EAAQtB,EAAG0B,EAAaC,GAGrD3F,KAAKC,IAAIkE,YAAcF,EACvBjE,KAAKC,IAAIyE,YAAcd,EAAWY,MAClCxE,KAAKC,IAAI0E,UAAY3B,EAAgBP,YACrCzC,KAAKC,IAAI4F,WAAWP,EAAQvB,EAAGuB,EAAQtB,EAAG0B,EAAaC,GAGvD,MAAMG,EAAUR,EAAQvB,EAAI2B,EAAc,EACpCK,EAAUT,EAAQtB,EAAI2B,EAAe,EAEvC3C,EAAgBX,mBAAqBN,KAAKE,IAAIyD,EAAaC,GAAgB,KAE7E3F,KAAKC,IAAIsE,UAAYX,EAAWY,MAChCxE,KAAKC,IAAI4E,KAAO,QAAQ7B,EAAgBlB,mBACxC9B,KAAKC,IAAI6E,UAAY,SACrB9E,KAAKC,IAAI8E,aAAe,SACxB/E,KAAKC,IAAI+E,SAASxB,EAAWyB,MAAMC,WAAYY,EAASC,IAItD/C,EAAgBV,mBAClBtC,KAAKgG,kBAAkBxC,EAAY,CAAEO,EAAG+B,EAAS9B,EAAGsB,EAAQtB,GAAKJ,EAAYK,EAAOjB,GAGtFhD,KAAKC,IAAIoF,SACb,CAKEF,gBAAAA,CAAiB3B,EAAYK,EAAWD,EAAYK,EAAOjB,GACzD,MAAMiD,EAASpC,EAAUG,EAAIhB,EAAgBZ,OAASY,EAAgBnC,YAEtEb,KAAKC,IAAIiE,OACTlE,KAAKC,IAAIkE,YAAcF,EAGvB,MAAMiC,EAAY,GAAGtC,EAAWuC,SAAS3C,EAAWyB,QACpDjF,KAAKC,IAAI4E,KAAO,GAAG7B,EAAgBlB,mBACnC,MACMsE,EADcpG,KAAKC,IAAIoG,YAAYH,GACXV,MAI9BxF,KAAKC,IAAIsE,UAAYX,EAAWY,MAChCxE,KAAKC,IAAI2F,SACP/B,EAAUE,EAAIqC,EAAY,EAHZ,EAIdH,EAASjD,EAAgBlB,SAAW,EAJtB,EAKdsE,EAAYE,EACZtD,EAAgBlB,SAAWwE,GAI7BtG,KAAKC,IAAIsE,UAAY,UACrBvE,KAAKC,IAAI6E,UAAY,SACrB9E,KAAKC,IAAI8E,aAAe,SACxB/E,KAAKC,IAAI+E,SAASkB,EAAWrC,EAAUE,EAAGkC,GAE1CjG,KAAKC,IAAIoF,SACb,CAKEW,iBAAAA,CAAkBxC,EAAYK,EAAWD,EAAYK,EAAOjB,GAC1D,MAAMiD,EAASpC,EAAUG,EAAIhB,EAAgBnC,YAE7Cb,KAAKC,IAAIiE,OACTlE,KAAKC,IAAIkE,YAAcF,EAGvB,MAAMiC,EAAY,GAAGtC,EAAWuC,SAAS3C,EAAWyB,QACpDjF,KAAKC,IAAI4E,KAAO,GAAG7B,EAAgBlB,mBACnC,MACMsE,EADcpG,KAAKC,IAAIoG,YAAYH,GACXV,MAI9BxF,KAAKC,IAAIsE,UAAYX,EAAWY,MAChCxE,KAAKC,IAAI2F,SACP/B,EAAUE,EAAIqC,EAAY,EAHZ,EAIdH,EAASjD,EAAgBlB,SAAW,EAJtB,EAKdsE,EAAYE,EACZtD,EAAgBlB,SAAWwE,GAI7BtG,KAAKC,IAAIsE,UAAY,UACrBvE,KAAKC,IAAI6E,UAAY,SACrB9E,KAAKC,IAAI8E,aAAe,SACxB/E,KAAKC,IAAI+E,SAASkB,EAAWrC,EAAUE,EAAGkC,GAE1CjG,KAAKC,IAAIoF,SACb,CAKEkB,qBAAAA,CAAsB1C,EAAWlB,GAC/B,IAAKA,EAAgB,OAAO,KAE5B,MAAMC,EAAc5C,KAAKD,wBAAwB8C,wBAAwBF,GAGnEM,EAAmBL,EAAYM,OAAOC,IAC1C,MAAMC,EAAOpD,KAAKD,wBAAwBsD,cAAcF,EAAIG,QAC5D,MAAsB,UAAfF,GAAMA,OAGToD,EAAoB5D,EAAYM,OAAOC,IAC3C,MAAMC,EAAOpD,KAAKD,wBAAwBsD,cAAcF,EAAIG,QAC5D,MAAsB,WAAfF,GAAMA,OAIf,IAAK,MAAMI,KAAcP,EACvB,GAAIjD,KAAKyG,oBAAoB5C,EAAWL,GACtC,OAAOA,EAKX,IAAK,MAAMA,KAAcgD,EACvB,GAAIxG,KAAKyG,oBAAoB5C,EAAWL,GACtC,OAAOA,EAIX,OAAO,IACX,CAKEiD,mBAAAA,CAAoB5C,EAAWL,GAC7B,MAAMI,EAAa5D,KAAKD,wBAAwBsD,cAAcG,EAAWF,QACzE,IAAKM,EAAY,SAEjB,MAAMZ,EAAkBhD,KAAK0B,qCAE7B,GAAwB,UAApBkC,EAAWR,KAAkB,CAC/B,MAAMsD,EAAsB1G,KAAKF,eAAegE,cAAcN,EAAWO,EAAGP,EAAWQ,GAKvF,OAJiBjC,KAAK4E,KACpB5E,KAAK6E,IAAI/C,EAAUE,EAAI2C,EAAoB3C,EAAG,GAC9ChC,KAAK6E,IAAI/C,EAAUG,EAAI0C,EAAoB1C,EAAG,KAE7BhB,EAAgBZ,OAAS,CAClD,IAAmC,WAApBwB,EAAWR,KAAmB,CACvC,MAAMkC,EAAUtF,KAAKF,eAAegE,cAAcN,EAAWO,EAAGP,EAAWQ,GACrEuB,EAAcvF,KAAKF,eAAegE,cACtCN,EAAWO,EAAIP,EAAWgC,MAC1BhC,EAAWQ,EAAIR,EAAWiC,QAG5B,OAAO5B,EAAUE,GAAKuB,EAAQvB,GAAKF,EAAUE,GAAKwB,EAAYxB,GACvDF,EAAUG,GAAKsB,EAAQtB,GAAKH,EAAUG,GAAKuB,EAAYvB,CACpE,CAEI,OAAO,CACX,CAKE6C,oBAAAA,CAAqBrD,GACnBxD,KAAKkB,kBAAoBsC,CAC7B,CAKEsD,qBAAAA,CAAsBtD,GACpBxD,KAAKmB,mBAAqBqC,CAC9B,CAKEuD,oBAAAA,GACE,OAAO/G,KAAKkB,iBAChB,CAKE8F,qBAAAA,GACE,OAAOhH,KAAKmB,kBAChB,CAKE8F,UAAAA,GACEjH,KAAKkB,kBAAoB,IAC7B,CAKEgG,cAAAA,GACElH,KAAKmB,mBAAqB,IAC9B,CAKEiE,aAAAA,CAAcrB,EAAGC,EAAGiB,EAAOrB,EAAYJ,EAAYR,GAEjD,MAAM9C,EAASF,KAAKE,OACdiH,EAAYjH,EAAOkH,cAGnBC,EAAkBF,EAAUG,cAAc,8BAC5CD,GACFA,EAAgBE,SAIlB,MAAMC,EAAUC,SAASC,cAAc,OACvCF,EAAQG,UAAY,4BACpBH,EAAQI,MAAMC,QAAU,4PAYxB,MAAMC,EAAiB,IAAI/F,KAAKgG,MAAMvE,EAAWO,OAAOhC,KAAKgG,MAAMvE,EAAWQ,MAC9EwD,EAAQQ,UAAY,gBACXpE,EAAWuC,SAASlB,wEAC6B6C,gBAI1D,MAAMG,EAAO/H,EAAOgI,wBACdC,EAAgBhB,EAAUe,wBAE1BE,EAAUH,EAAKI,KAAOF,EAAcE,KACpCC,EAAUL,EAAKM,IAAMJ,EAAcI,IAEzCf,EAAQI,MAAMS,KAAQD,EAAUrE,EAAI,GAAM,KAC1CyD,EAAQI,MAAMW,IAAOD,EAAUtE,EAAI,GAAM,KAEzCmD,EAAUqB,YAAYhB,GAGtBiB,WAAW,KACLjB,EAAQJ,eACVI,EAAQD,UAET,IACP,CAIE5D,iBAAAA,CAAkBX,GAChB,IAAKhD,KAAKF,eAAe8B,MAAMmB,uBAAwB,OAEvD,MAAM2F,EAAiB1I,KAAKF,eAAe8B,MAAM+G,uBAC3CC,EAAmB5I,KAAKF,eAAe8B,MAAMiH,yBAEnD,IAAKH,IAAmBE,EAAkB,OAE1C,MAAMhF,EAAa5D,KAAKD,wBAAwB+I,uBAChD,IAAKlF,GAAkC,WAApBA,EAAWR,KAAmB,OAEjD,MAAMiF,EAAOtG,KAAKE,IAAIyG,EAAe3E,EAAG6E,EAAiB7E,GACnDwE,EAAMxG,KAAKE,IAAIyG,EAAe1E,EAAG4E,EAAiB5E,GAClDwB,EAAQzD,KAAKgH,IAAIH,EAAiB7E,EAAI2E,EAAe3E,GACrD0B,EAAS1D,KAAKgH,IAAIH,EAAiB5E,EAAI0E,EAAe1E,GAE5DhE,KAAKC,IAAIiE,OACTlE,KAAKC,IAAIkE,YAAc,GAGvBnE,KAAKC,IAAIsE,UAAYX,EAAWY,MAChCxE,KAAKC,IAAI2F,SAASyC,EAAME,EAAK/C,EAAOC,GAGpCzF,KAAKC,IAAIyE,YAAcd,EAAWY,MAClCxE,KAAKC,IAAI0E,UAAY3B,EAAkBA,EAAgBP,YAAc,EACrEzC,KAAKC,IAAI+I,YAAY,CAAC,EAAG,IACzBhJ,KAAKC,IAAI4F,WAAWwC,EAAME,EAAK/C,EAAOC,GAGtCzF,KAAKC,IAAIkE,YAAc,GACvBnE,KAAKC,IAAIsE,UAAY,UACrBvE,KAAKC,IAAI4E,KAAO,GAAG7B,EAAkBA,EAAgBlB,SAAW,aAChE9B,KAAKC,IAAI6E,UAAY,SACrB9E,KAAKC,IAAI8E,aAAe,SAExB,MAAMkE,EAAW,GAAGlH,KAAKgG,MAAMvC,MAAUzD,KAAKgG,MAAMtC,KACpDzF,KAAKC,IAAI+E,SAASiE,EAAUZ,EAAO7C,EAAM,EAAG+C,EAAM9C,EAAO,GAEzDzF,KAAKC,IAAIoF,SACb,CAKE6D,kBAAAA,CAAmBrF,EAAWD,GACvBA,GAAkC,UAApBA,EAAWR,OAE9BpD,KAAKC,IAAIiE,OACTlE,KAAKC,IAAIkE,YAAc,GAGvBnE,KAAKC,IAAImE,YACTpE,KAAKC,IAAIoE,IAAIR,EAAUE,EAAGF,EAAUG,EAAGhE,KAAKG,OAAOgJ,YAAa,EAAG,EAAIpH,KAAKuC,IAC5EtE,KAAKC,IAAIsE,UAAYX,EAAWY,MAChCxE,KAAKC,IAAIwE,OAGTzE,KAAKC,IAAIyE,YAAc1E,KAAKG,OAAOK,iBACnCR,KAAKC,IAAI0E,UAAY3E,KAAKG,OAAOM,iBACjCT,KAAKC,IAAI+I,YAAY,CAAC,EAAG,IACzBhJ,KAAKC,IAAI2E,SAGT5E,KAAKC,IAAI+I,YAAY,IACrBhJ,KAAKC,IAAIsE,UAAYvE,KAAKG,OAAOK,iBACjCR,KAAKC,IAAI4E,KAAO,QAAQ7E,KAAKG,OAAOiJ,wBACpCpJ,KAAKC,IAAI6E,UAAY,SACrB9E,KAAKC,IAAI8E,aAAe,SACxB/E,KAAKC,IAAI+E,SAAS,IAAKnB,EAAUE,EAAGF,EAAUG,GAE9ChE,KAAKC,IAAIoF,UACb,CAKEgE,YAAAA,CAAaC,GACXtJ,KAAKG,OAAS,IAAKH,KAAKG,UAAWmJ,EACvC,CAKEC,SAAAA,GACE,MAAO,IAAKvJ,KAAKG,OACrB,CAKEqJ,SAAAA,CAAUhG,EAAYiG,GACpBzJ,KAAKoB,kBAAoBoC,EACzBxD,KAAKqB,kBAAoB,CACvBqI,OAAQD,EACRjG,WAAY,CACVO,EAAGP,EAAWO,EACdC,EAAGR,EAAWQ,KACVR,EAAWgC,OAAS,CAAEA,MAAOhC,EAAWgC,UACxChC,EAAWiC,QAAU,CAAEA,OAAQjC,EAAWiC,UAGlDzF,KAAKsB,oBAAsBmI,EAC3BzJ,KAAKuB,YAAa,EAElBC,QAAQC,IAAI,sCAAuC+B,EAAWmG,GAClE,CAKEC,UAAAA,CAAWH,GACT,IAAKzJ,KAAKuB,aAAevB,KAAKoB,oBAAsBpB,KAAKqB,kBACvD,OAAO,EAGTrB,KAAKsB,oBAAsBmI,EAG3B,MAAMI,EAASJ,EAAe1F,EAAI/D,KAAKqB,kBAAkBqI,OAAO3F,EAC1D+F,EAASL,EAAezF,EAAIhE,KAAKqB,kBAAkBqI,OAAO1F,EAG1D+F,EAAcF,EAAS7J,KAAKF,eAAe8B,MAAMD,MACjDqI,EAAcF,EAAS9J,KAAKF,eAAe8B,MAAMD,MASvD,OANA3B,KAAKoB,kBAAkB2C,EAAI/D,KAAKqB,kBAAkBmC,WAAWO,EAAIgG,EACjE/J,KAAKoB,kBAAkB4C,EAAIhE,KAAKqB,kBAAkBmC,WAAWQ,EAAIgG,EAGjEhK,KAAKiK,4BAA4BjK,KAAKoB,oBAE/B,CACX,CAKE8I,UAAAA,GACE,IAAKlK,KAAKuB,aAAevB,KAAKoB,kBAC5B,OAAO,KAGT,MAAMA,EAAoBpB,KAAKoB,kBACzB+I,EAAgBnK,KAAKqB,kBAGrB+I,EAAQrI,KAAKgH,IAAI3H,EAAkB2C,EAAIoG,EAAc3G,WAAWO,GAAK,GAC7DhC,KAAKgH,IAAI3H,EAAkB4C,EAAImG,EAAc3G,WAAWQ,GAAK,EAU3E,OAPAhE,KAAKoB,kBAAoB,KACzBpB,KAAKqB,kBAAoB,KACzBrB,KAAKsB,oBAAsB,KAC3BtB,KAAKuB,YAAa,EAElBC,QAAQC,IAAI,uCAAwCL,EAAkBuI,GAAI,SAAUS,GAE7E,CACL5G,WAAYpC,EACZgJ,MAAOA,EACPD,cAAeA,EAAc3G,WAEnC,CAKE6G,UAAAA,GACOrK,KAAKuB,YAAevB,KAAKoB,mBAAsBpB,KAAKqB,oBAKzDrB,KAAKoB,kBAAkB2C,EAAI/D,KAAKqB,kBAAkBmC,WAAWO,EAC7D/D,KAAKoB,kBAAkB4C,EAAIhE,KAAKqB,kBAAkBmC,WAAWQ,EAEzDhE,KAAKqB,kBAAkBmC,WAAWgC,QACpCxF,KAAKoB,kBAAkBoE,MAAQxF,KAAKqB,kBAAkBmC,WAAWgC,OAE/DxF,KAAKqB,kBAAkBmC,WAAWiC,SACpCzF,KAAKoB,kBAAkBqE,OAASzF,KAAKqB,kBAAkBmC,WAAWiC,QAIpEzF,KAAKoB,kBAAoB,KACzBpB,KAAKqB,kBAAoB,KACzBrB,KAAKsB,oBAAsB,KAC3BtB,KAAKuB,YAAa,EAElBC,QAAQC,IAAI,wCAChB,CAKEwI,2BAAAA,CAA4BzG,GAC1B,IAAKxD,KAAKF,eAAewK,aAAc,OAEvC,MAAMC,EAAavK,KAAKF,eAAewK,aAAa9E,MAC9CgF,EAAcxK,KAAKF,eAAewK,aAAa7E,OAGrDjC,EAAWO,EAAIhC,KAAKC,IAAI,EAAGD,KAAKE,IAAIsI,EAAY/G,EAAWO,IAC3DP,EAAWQ,EAAIjC,KAAKC,IAAI,EAAGD,KAAKE,IAAIuI,EAAahH,EAAWQ,IAGxDR,EAAWgC,OAAShC,EAAWiC,SACjCjC,EAAWgC,MAAQzD,KAAKE,IAAIuB,EAAWgC,MAAO+E,EAAa/G,EAAWO,GACtEP,EAAWiC,OAAS1D,KAAKE,IAAIuB,EAAWiC,OAAQ+E,EAAchH,EAAWQ,GAE/E,CAKEyG,oBAAAA,GACE,OAAOzK,KAAKuB,UAChB,CAKEmJ,oBAAAA,GACE,OAAO1K,KAAKoB,iBAChB,CAKEuC,iBAAAA,CAAkBX,GAChB,IAAKhD,KAAKuB,aAAevB,KAAKoB,kBAAmB,OAEjD,MAAMwC,EAAa5D,KAAKD,wBAAwBsD,cAAcrD,KAAKoB,kBAAkBkC,QAChFM,IAGL5D,KAAKC,IAAIiE,OACTlE,KAAKC,IAAIkE,YAAc,GAEC,UAApBP,EAAWR,KACbpD,KAAK0D,sBAAsB1D,KAAKoB,kBAAmB4B,GACtB,WAApBY,EAAWR,MACpBpD,KAAKyD,uBAAuBzD,KAAKoB,kBAAmB4B,GAGtDhD,KAAKC,IAAIoF,UACb"}