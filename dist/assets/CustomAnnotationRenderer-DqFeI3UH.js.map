{"version":3,"file":"CustomAnnotationRenderer-DqFeI3UH.js","sources":["../../src/core/CustomAnnotationRenderer.js"],"sourcesContent":["/**\n * 自定义标注渲染器\n * \n * 功能：\n * - 渲染自定义点标注和区域标注\n * - 提供视觉反馈和交互\n * - 支持编号系统和颜色自定义\n * - 与AnnotationTool集成\n */\n\nexport class CustomAnnotationRenderer {\n  constructor(annotationTool, customAnnotationManager) {\n    this.annotationTool = annotationTool;\n    this.customAnnotationManager = customAnnotationManager;\n    this.ctx = annotationTool.ctx;\n    this.canvas = annotationTool.canvas;\n    \n    // 渲染配置\n    this.config = {\n      // 基础配置\n      basePointRadius: 8,\n      minPointRadius: 4,\n      maxPointRadius: 20,\n      pointScaleFactor: 0.8,\n      \n      // 颜色配置\n      pointBorderColor: '#ffffff',\n      pointBorderWidth: 2,\n      regionBorderWidth: 2,\n      regionFillAlpha: 0.2,\n      \n      // 标签配置\n      baseLabelFontSize: 12,\n      labelOffset: 16,\n      labelThresholdScale: 0.6,\n      tinyThresholdScale: 0.3,\n      \n      // 状态配置\n      hoverAlpha: 0.8,\n      selectedAlpha: 0.9\n    };\n    \n    // 当前状态\n    this.hoveredAnnotation = null;\n    this.selectedAnnotation = null;\n    \n    // 拖拽状态\n    this.draggedAnnotation = null;\n    this.dragStartPosition = null;\n    this.dragCurrentPosition = null;\n    this.isDragging = false;\n    \n    console.log('CustomAnnotationRenderer initialized');\n  }\n\n  /**\n   * 获取自定义标注显示策略\n   */\n  getCustomAnnotationDisplayStrategy() {\n    const scale = this.annotationTool.state.scale;\n    \n    // 计算实际的标注点半径\n    const smallRadius = 3; // 更小的默认点半径\n    let actualRadius;\n    \n    if (scale >= 1.5) {\n      // 大缩放：使用能容纳文字的最小圆圈\n      const fontSize = Math.max(10, Math.min(16, 12 * scale));\n      const textBasedRadius = Math.max(8, fontSize * 0.7);\n      const maxRadiusForLargeScale = Math.min(12, 8 + (scale - 1.5) * 2);\n      \n      actualRadius = Math.min(textBasedRadius, maxRadiusForLargeScale);\n      actualRadius = Math.max(8, actualRadius);\n    } else {\n      // 默认和小缩放：使用更小的点\n      actualRadius = smallRadius + (scale - 0.1) * 1.5;\n      actualRadius = Math.max(smallRadius, Math.min(6, actualRadius));\n    }\n    \n    return {\n      scale: scale,\n      radius: actualRadius,\n      showInternalLabel: scale >= 1.5,\n      showExternalLabel: scale >= this.config.tinyThresholdScale,\n      showMinimalMode: scale < this.config.tinyThresholdScale,\n      fontSize: Math.max(10, Math.min(16, 12 * scale)),\n      directionFontSize: Math.max(8, Math.min(12, 10 * scale)),\n      labelOffset: Math.max(8, this.config.labelOffset * Math.min(scale, 1.5)),\n      borderWidth: Math.max(1, Math.min(3, this.config.pointBorderWidth * scale))\n    };\n  }\n  /**\n   * 渲染当前图像的所有自定义标注\n   */\n  renderCustomAnnotations(currentImageId) {\n    if (!currentImageId) return;\n    \n    const annotations = this.customAnnotationManager.getAnnotationsByImageId(currentImageId);\n    if (annotations.length === 0 && !this.annotationTool.state.isCustomRegionDragging) return;\n    \n    // 获取显示策略\n    const displayStrategy = this.getCustomAnnotationDisplayStrategy();\n    \n    // 按类型分组渲染\n    const pointAnnotations = annotations.filter(ann => {\n      const type = this.customAnnotationManager.getCustomType(ann.typeId);\n      return type?.type === 'point';\n    });\n    \n    const regionAnnotations = annotations.filter(ann => {\n      const type = this.customAnnotationManager.getCustomType(ann.typeId);\n      return type?.type === 'region';\n    });\n    \n    // 先渲染区域，再渲染点（点在上层）\n    regionAnnotations.forEach(annotation => {\n      this.renderRegionAnnotation(annotation, displayStrategy);\n    });\n    \n    pointAnnotations.forEach(annotation => {\n      this.renderPointAnnotation(annotation, displayStrategy);\n    });\n    \n    // 渲染拖拽预览\n    this.renderDragPreview(displayStrategy);\n  }\n\n  /**\n   * 渲染点标注\n   */\n  renderPointAnnotation(annotation, displayStrategy) {\n    const customType = this.customAnnotationManager.getCustomType(annotation.typeId);\n    if (!customType) return;\n    \n    const screenPos = this.annotationTool.imageToScreen(annotation.x, annotation.y);\n    \n    // 确定透明度\n    let alpha = 1;\n    if (this.hoveredAnnotation === annotation) {\n      alpha = this.config.hoverAlpha;\n    } else if (this.selectedAnnotation === annotation) {\n      alpha = this.config.selectedAlpha;\n    }\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = alpha;\n    \n    // 绘制点\n    this.ctx.beginPath();\n    this.ctx.arc(screenPos.x, screenPos.y, displayStrategy.radius, 0, 2 * Math.PI);\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fill();\n    \n    // 绘制边框\n    this.ctx.strokeStyle = this.config.pointBorderColor;\n    this.ctx.lineWidth = displayStrategy.borderWidth;\n    this.ctx.stroke();\n    \n    // 根据显示策略绘制标签\n    if (displayStrategy.showInternalLabel) {\n      // 在标注点内部显示序号\n      this.ctx.fillStyle = this.config.pointBorderColor;\n      this.ctx.font = `bold ${displayStrategy.fontSize}px Arial`;\n      this.ctx.textAlign = 'center';\n      this.ctx.textBaseline = 'middle';\n      this.ctx.fillText(annotation.order.toString(), screenPos.x, screenPos.y);\n    } else if (displayStrategy.showExternalLabel) {\n      // 在标注点外部显示标签\n      this.renderPointLabel(annotation, screenPos, customType, alpha, displayStrategy);\n    } else if (displayStrategy.showMinimalMode) {\n      // 极小模式：只显示标注点，悬停时显示详细信息\n      if (this.hoveredAnnotation === annotation) {\n        this.createTooltip(screenPos.x, screenPos.y, annotation.order, customType, annotation, displayStrategy);\n      }\n    }\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 渲染区域标注\n   */\n  renderRegionAnnotation(annotation, displayStrategy) {\n    const customType = this.customAnnotationManager.getCustomType(annotation.typeId);\n    if (!customType) return;\n    \n    const topLeft = this.annotationTool.imageToScreen(annotation.x, annotation.y);\n    const bottomRight = this.annotationTool.imageToScreen(\n      annotation.x + annotation.width,\n      annotation.y + annotation.height\n    );\n    \n    const screenWidth = bottomRight.x - topLeft.x;\n    const screenHeight = bottomRight.y - topLeft.y;\n    \n    // 确定透明度\n    let alpha = 1;\n    if (this.hoveredAnnotation === annotation) {\n      alpha = this.config.hoverAlpha;\n    } else if (this.selectedAnnotation === annotation) {\n      alpha = this.config.selectedAlpha;\n    }\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = alpha;\n    \n    // 绘制填充区域\n    this.ctx.fillStyle = customType.color;\n    this.ctx.globalAlpha = alpha * this.config.regionFillAlpha;\n    this.ctx.fillRect(topLeft.x, topLeft.y, screenWidth, screenHeight);\n    \n    // 绘制边框（使用缩放相关的线宽）\n    this.ctx.globalAlpha = alpha;\n    this.ctx.strokeStyle = customType.color;\n    this.ctx.lineWidth = displayStrategy.borderWidth;\n    this.ctx.strokeRect(topLeft.x, topLeft.y, screenWidth, screenHeight);\n    \n    // 绘制编号（在区域中心）\n    const centerX = topLeft.x + screenWidth / 2;\n    const centerY = topLeft.y + screenHeight / 2;\n    \n    if (displayStrategy.showInternalLabel && Math.min(screenWidth, screenHeight) > 20) {\n      // 在区域内部显示编号\n      this.ctx.fillStyle = customType.color;\n      this.ctx.font = `bold ${displayStrategy.fontSize}px Arial`;\n      this.ctx.textAlign = 'center';\n      this.ctx.textBaseline = 'middle';\n      this.ctx.fillText(annotation.order.toString(), centerX, centerY);\n    }\n    \n    // 绘制外部标签\n    if (displayStrategy.showExternalLabel) {\n      this.renderRegionLabel(annotation, { x: centerX, y: topLeft.y }, customType, alpha, displayStrategy);\n    }\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 渲染点标注标签\n   */\n  renderPointLabel(annotation, screenPos, customType, alpha, displayStrategy) {\n    const labelY = screenPos.y - displayStrategy.radius - displayStrategy.labelOffset;\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = alpha;\n    \n    // 创建标签文本\n    const labelText = `${customType.name} #${annotation.order}`;\n    this.ctx.font = `${displayStrategy.fontSize}px Arial`;\n    const textMetrics = this.ctx.measureText(labelText);\n    const textWidth = textMetrics.width;\n    \n    // 绘制标签背景\n    const padding = 4;\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fillRect(\n      screenPos.x - textWidth / 2 - padding,\n      labelY - displayStrategy.fontSize / 2 - padding,\n      textWidth + padding * 2,\n      displayStrategy.fontSize + padding * 2\n    );\n    \n    // 绘制标签文本\n    this.ctx.fillStyle = '#ffffff';\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(labelText, screenPos.x, labelY);\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 渲染区域标注标签\n   */\n  renderRegionLabel(annotation, screenPos, customType, alpha, displayStrategy) {\n    const labelY = screenPos.y - displayStrategy.labelOffset;\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = alpha;\n    \n    // 创建标签文本\n    const labelText = `${customType.name} #${annotation.order}`;\n    this.ctx.font = `${displayStrategy.fontSize}px Arial`;\n    const textMetrics = this.ctx.measureText(labelText);\n    const textWidth = textMetrics.width;\n    \n    // 绘制标签背景\n    const padding = 4;\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fillRect(\n      screenPos.x - textWidth / 2 - padding,\n      labelY - displayStrategy.fontSize / 2 - padding,\n      textWidth + padding * 2,\n      displayStrategy.fontSize + padding * 2\n    );\n    \n    // 绘制标签文本\n    this.ctx.fillStyle = '#ffffff';\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(labelText, screenPos.x, labelY);\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 检查鼠标位置是否在自定义标注上\n   */\n  getCustomAnnotationAt(screenPos, currentImageId) {\n    if (!currentImageId) return null;\n    \n    const annotations = this.customAnnotationManager.getAnnotationsByImageId(currentImageId);\n    \n    // 按渲染顺序的反序检查（点在区域之上）\n    const pointAnnotations = annotations.filter(ann => {\n      const type = this.customAnnotationManager.getCustomType(ann.typeId);\n      return type?.type === 'point';\n    });\n    \n    const regionAnnotations = annotations.filter(ann => {\n      const type = this.customAnnotationManager.getCustomType(ann.typeId);\n      return type?.type === 'region';\n    });\n    \n    // 先检查点标注\n    for (const annotation of pointAnnotations) {\n      if (this.isPointInAnnotation(screenPos, annotation)) {\n        return annotation;\n      }\n    }\n    \n    // 再检查区域标注\n    for (const annotation of regionAnnotations) {\n      if (this.isPointInAnnotation(screenPos, annotation)) {\n        return annotation;\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * 检查点是否在标注内\n   */\n  isPointInAnnotation(screenPos, annotation) {\n    const customType = this.customAnnotationManager.getCustomType(annotation.typeId);\n    if (!customType) return false;\n    \n    const displayStrategy = this.getCustomAnnotationDisplayStrategy();\n    \n    if (customType.type === 'point') {\n      const annotationScreenPos = this.annotationTool.imageToScreen(annotation.x, annotation.y);\n      const distance = Math.sqrt(\n        Math.pow(screenPos.x - annotationScreenPos.x, 2) +\n        Math.pow(screenPos.y - annotationScreenPos.y, 2)\n      );\n      return distance <= displayStrategy.radius + 5; // 5px tolerance\n    } else if (customType.type === 'region') {\n      const topLeft = this.annotationTool.imageToScreen(annotation.x, annotation.y);\n      const bottomRight = this.annotationTool.imageToScreen(\n        annotation.x + annotation.width,\n        annotation.y + annotation.height\n      );\n      \n      return screenPos.x >= topLeft.x && screenPos.x <= bottomRight.x &&\n             screenPos.y >= topLeft.y && screenPos.y <= bottomRight.y;\n    }\n    \n    return false;\n  }\n\n  /**\n   * 设置悬停的标注\n   */\n  setHoveredAnnotation(annotation) {\n    this.hoveredAnnotation = annotation;\n  }\n\n  /**\n   * 设置选中的标注\n   */\n  setSelectedAnnotation(annotation) {\n    this.selectedAnnotation = annotation;\n  }\n\n  /**\n   * 获取悬停的标注\n   */\n  getHoveredAnnotation() {\n    return this.hoveredAnnotation;\n  }\n\n  /**\n   * 获取选中的标注\n   */\n  getSelectedAnnotation() {\n    return this.selectedAnnotation;\n  }\n\n  /**\n   * 清除悬停状态\n   */\n  clearHover() {\n    this.hoveredAnnotation = null;\n  }\n\n  /**\n   * 清除选中状态\n   */\n  clearSelection() {\n    this.selectedAnnotation = null;\n  }\n\n  /**\n   * 创建悬停提示\n   */\n  createTooltip(x, y, order, customType, annotation, displayStrategy) {\n    // 只在极小模式下显示提示\n    const canvas = this.canvas;\n    const container = canvas.parentElement;\n    \n    // 移除已存在的提示\n    const existingTooltip = container.querySelector('.custom-annotation-tooltip');\n    if (existingTooltip) {\n      existingTooltip.remove();\n    }\n    \n    // 创建提示元素\n    const tooltip = document.createElement('div');\n    tooltip.className = 'custom-annotation-tooltip';\n    tooltip.style.cssText = `\n      position: absolute;\n      background: rgba(0, 0, 0, 0.8);\n      color: white;\n      padding: 6px 10px;\n      border-radius: 4px;\n      font-size: 12px;\n      z-index: 1000;\n      pointer-events: none;\n      white-space: nowrap;\n    `;\n    \n    const coordinateText = `(${Math.round(annotation.x)}, ${Math.round(annotation.y)})`;\n    tooltip.innerHTML = `\n      <div>${customType.name} #${order}</div>\n      <div style=\"font-size: 10px; opacity: 0.8;\">Position: ${coordinateText}</div>\n    `;\n    \n    // 计算提示位置\n    const rect = canvas.getBoundingClientRect();\n    const containerRect = container.getBoundingClientRect();\n    \n    const offsetX = rect.left - containerRect.left;\n    const offsetY = rect.top - containerRect.top;\n    \n    tooltip.style.left = (offsetX + x - 60) + 'px';\n    tooltip.style.top = (offsetY + y - 60) + 'px';\n    \n    container.appendChild(tooltip);\n    \n    // 自动移除提示\n    setTimeout(() => {\n      if (tooltip.parentElement) {\n        tooltip.remove();\n      }\n    }, 2000);\n  }\n  /**\n   * 渲染拖拽预览（区域标注）\n   */\n  renderDragPreview(displayStrategy) {\n    if (!this.annotationTool.state.isCustomRegionDragging) return;\n    \n    const startScreenPos = this.annotationTool.state.customRegionStartPoint;\n    const currentScreenPos = this.annotationTool.state.customRegionCurrentPoint;\n    \n    if (!startScreenPos || !currentScreenPos) return;\n    \n    const customType = this.customAnnotationManager.getCurrentCustomType();\n    if (!customType || customType.type !== 'region') return;\n    \n    const left = Math.min(startScreenPos.x, currentScreenPos.x);\n    const top = Math.min(startScreenPos.y, currentScreenPos.y);\n    const width = Math.abs(currentScreenPos.x - startScreenPos.x);\n    const height = Math.abs(currentScreenPos.y - startScreenPos.y);\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = 0.5;\n    \n    // 绘制预览填充\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fillRect(left, top, width, height);\n    \n    // 绘制预览边框（使用缩放相关的线宽）\n    this.ctx.strokeStyle = customType.color;\n    this.ctx.lineWidth = displayStrategy ? displayStrategy.borderWidth : 2;\n    this.ctx.setLineDash([5, 5]);\n    this.ctx.strokeRect(left, top, width, height);\n    \n    // 绘制尺寸信息\n    this.ctx.globalAlpha = 0.8;\n    this.ctx.fillStyle = '#000000';\n    this.ctx.font = `${displayStrategy ? displayStrategy.fontSize : 12}px Arial`;\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    \n    const sizeText = `${Math.round(width)}x${Math.round(height)}`;\n    this.ctx.fillText(sizeText, left + width/2, top + height/2);\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 渲染点预览（点标注）\n   */\n  renderPointPreview(screenPos, customType) {\n    if (!customType || customType.type !== 'point') return;\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = 0.7;\n    \n    // 绘制预览点\n    this.ctx.beginPath();\n    this.ctx.arc(screenPos.x, screenPos.y, this.config.pointRadius, 0, 2 * Math.PI);\n    this.ctx.fillStyle = customType.color;\n    this.ctx.fill();\n    \n    // 绘制预览边框\n    this.ctx.strokeStyle = this.config.pointBorderColor;\n    this.ctx.lineWidth = this.config.pointBorderWidth;\n    this.ctx.setLineDash([3, 3]);\n    this.ctx.stroke();\n    \n    // 绘制预览标签\n    this.ctx.setLineDash([]);\n    this.ctx.fillStyle = this.config.pointBorderColor;\n    this.ctx.font = `bold ${this.config.labelFontSize}px Arial`;\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText('?', screenPos.x, screenPos.y);\n    \n    this.ctx.restore();\n  }\n\n  /**\n   * 更新配置\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n  }\n\n  /**\n   * 获取当前配置\n   */\n  getConfig() {\n    return { ...this.config };\n  }\n  \n  /**\n   * 开始拖拽自定义标注\n   */\n  startDrag(annotation, screenPosition) {\n    this.draggedAnnotation = annotation;\n    this.dragStartPosition = {\n      screen: screenPosition,\n      annotation: {\n        x: annotation.x,\n        y: annotation.y,\n        ...(annotation.width && { width: annotation.width }),\n        ...(annotation.height && { height: annotation.height })\n      }\n    };\n    this.dragCurrentPosition = screenPosition;\n    this.isDragging = true;\n    \n    console.log('Started dragging custom annotation:', annotation.id);\n  }\n  \n  /**\n   * 更新拖拽位置\n   */\n  updateDrag(screenPosition) {\n    if (!this.isDragging || !this.draggedAnnotation || !this.dragStartPosition) {\n      return false;\n    }\n    \n    this.dragCurrentPosition = screenPosition;\n    \n    // 计算拖拽偏移量\n    const deltaX = screenPosition.x - this.dragStartPosition.screen.x;\n    const deltaY = screenPosition.y - this.dragStartPosition.screen.y;\n    \n    // 转换为图像坐标偏移\n    const imageDeltaX = deltaX / this.annotationTool.state.scale;\n    const imageDeltaY = deltaY / this.annotationTool.state.scale;\n    \n    // 更新标注位置\n    this.draggedAnnotation.x = this.dragStartPosition.annotation.x + imageDeltaX;\n    this.draggedAnnotation.y = this.dragStartPosition.annotation.y + imageDeltaY;\n    \n    // 确保标注保持在图像边界内\n    this.constrainAnnotationPosition(this.draggedAnnotation);\n    \n    return true;\n  }\n  \n  /**\n   * 完成拖拽\n   */\n  finishDrag() {\n    if (!this.isDragging || !this.draggedAnnotation) {\n      return null;\n    }\n    \n    const draggedAnnotation = this.draggedAnnotation;\n    const startPosition = this.dragStartPosition;\n    \n    // 检查是否有实际移动\n    const moved = Math.abs(draggedAnnotation.x - startPosition.annotation.x) > 1 ||\n                  Math.abs(draggedAnnotation.y - startPosition.annotation.y) > 1;\n    \n    // 清除拖拽状态\n    this.draggedAnnotation = null;\n    this.dragStartPosition = null;\n    this.dragCurrentPosition = null;\n    this.isDragging = false;\n    \n    console.log('Finished dragging custom annotation:', draggedAnnotation.id, 'Moved:', moved);\n    \n    return {\n      annotation: draggedAnnotation,\n      moved: moved,\n      startPosition: startPosition.annotation\n    };\n  }\n  \n  /**\n   * 取消拖拽\n   */\n  cancelDrag() {\n    if (!this.isDragging || !this.draggedAnnotation || !this.dragStartPosition) {\n      return;\n    }\n    \n    // 恢复原始位置\n    this.draggedAnnotation.x = this.dragStartPosition.annotation.x;\n    this.draggedAnnotation.y = this.dragStartPosition.annotation.y;\n    \n    if (this.dragStartPosition.annotation.width) {\n      this.draggedAnnotation.width = this.dragStartPosition.annotation.width;\n    }\n    if (this.dragStartPosition.annotation.height) {\n      this.draggedAnnotation.height = this.dragStartPosition.annotation.height;\n    }\n    \n    // 清除拖拽状态\n    this.draggedAnnotation = null;\n    this.dragStartPosition = null;\n    this.dragCurrentPosition = null;\n    this.isDragging = false;\n    \n    console.log('Cancelled dragging custom annotation');\n  }\n  \n  /**\n   * 约束标注位置在图像边界内\n   */\n  constrainAnnotationPosition(annotation) {\n    if (!this.annotationTool.imageElement) return;\n    \n    const imageWidth = this.annotationTool.imageElement.width;\n    const imageHeight = this.annotationTool.imageElement.height;\n    \n    // 约束位置\n    annotation.x = Math.max(0, Math.min(imageWidth, annotation.x));\n    annotation.y = Math.max(0, Math.min(imageHeight, annotation.y));\n    \n    // 对于区域标注，还需要约束尺寸\n    if (annotation.width && annotation.height) {\n      annotation.width = Math.min(annotation.width, imageWidth - annotation.x);\n      annotation.height = Math.min(annotation.height, imageHeight - annotation.y);\n    }\n  }\n  \n  /**\n   * 检查是否正在拖拽\n   */\n  isDraggingAnnotation() {\n    return this.isDragging;\n  }\n  \n  /**\n   * 获取当前拖拽的标注\n   */\n  getDraggedAnnotation() {\n    return this.draggedAnnotation;\n  }\n  \n  /**\n   * 渲染拖拽预览效果\n   */\n  renderDragPreview(displayStrategy) {\n    if (!this.isDragging || !this.draggedAnnotation) return;\n    \n    const customType = this.customAnnotationManager.getCustomType(this.draggedAnnotation.typeId);\n    if (!customType) return;\n    \n    // 绘制拖拽预览（半透明）\n    this.ctx.save();\n    this.ctx.globalAlpha = 0.6;\n    \n    if (customType.type === 'point') {\n      this.renderPointAnnotation(this.draggedAnnotation, displayStrategy);\n    } else if (customType.type === 'region') {\n      this.renderRegionAnnotation(this.draggedAnnotation, displayStrategy);\n    }\n    \n    this.ctx.restore();\n  }\n}"],"names":["CustomAnnotationRenderer","annotationTool","customAnnotationManager","scale","smallRadius","actualRadius","fontSize","textBasedRadius","maxRadiusForLargeScale","currentImageId","annotations","displayStrategy","pointAnnotations","ann","type","annotation","customType","screenPos","alpha","topLeft","bottomRight","screenWidth","screenHeight","centerX","centerY","labelY","labelText","textWidth","padding","regionAnnotations","annotationScreenPos","x","y","order","canvas","container","existingTooltip","tooltip","coordinateText","rect","containerRect","offsetX","offsetY","startScreenPos","currentScreenPos","left","top","width","height","sizeText","newConfig","screenPosition","deltaX","deltaY","imageDeltaX","imageDeltaY","draggedAnnotation","startPosition","moved","imageWidth","imageHeight"],"mappings":"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"}